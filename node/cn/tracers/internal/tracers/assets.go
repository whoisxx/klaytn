// Code generated by go-bindata. DO NOT EDIT.
// sources:
// 4byte_tracer.js (2.932kB)
// bigram_tracer.js (2.296kB)
// call_tracer.js (10.86kB)
// evmdis_tracer.js (4.194kB)
// noop_tracer.js (1.26kB)
// opcount_tracer.js (1.372kB)
// prestate_tracer.js (4.237kB)
// revert_tracer.js (2.248kB)
// trigram_tracer.js (2.362kB)
// unigram_tracer.js (1.994kB)

package tracers

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %w", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var __4byte_tracerJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x56\x5b\x6f\xdb\x4a\x0e\x7e\xb6\x7f\x05\xd7\x2f\xb5\x51\x59\x8e\x2f\x89\x2f\xd9\x16\xf0\xe6\xa4\x6d\x80\x9c\x24\x88\xdd\x3d\x28\x16\xfb\x30\x9e\xa1\xac\xd9\xc8\x33\xc2\x0c\xe5\x4b\x73\xf2\xdf\x17\x1c\x49\x89\x93\xd3\x62\xbb\x4f\x96\x47\xc3\x8f\x1f\xc9\x8f\xa4\x7a\x3d\xb8\xb0\xf9\xc1\xe9\x75\x4a\x30\x38\xe9\x8f\x61\x99\x22\xac\x6d\x17\x29\x45\x87\xc5\x06\xe6\x05\xa5\xd6\xf9\x66\xaf\x07\xcb\x54\x7b\x48\x74\x86\xa0\x3d\xe4\xc2\x11\xd8\x04\xe8\xcd\xfd\x4c\xaf\x9c\x70\x87\xb8\xd9\xeb\x95\x36\x3f\x7c\xcd\x08\x89\x43\x04\x6f\x13\xda\x09\x87\x33\x38\xd8\x02\xa4\x30\xe0\x50\x69\x4f\x4e\xaf\x0a\x42\xd0\x04\xc2\xa8\x9e\x75\xb0\xb1\x4a\x27\x07\x86\xd4\x04\x85\x51\xe8\x82\x6b\x42\xb7\xf1\x35\x8f\xcf\x37\x5f\xe1\x1a\xbd\x47\x07\x9f\xd1\xa0\x13\x19\xdc\x15\xab\x4c\x4b\xb8\xd6\x12\x8d\x47\x10\x1e\x72\x3e\xf1\x29\x2a\x58\x05\x38\x36\xfc\xc4\x54\x16\x15\x15\xf8\x64\x0b\xa3\x04\x69\x6b\x22\x40\xcd\xcc\x61\x8b\xce\x6b\x6b\x60\x58\xbb\xaa\x00\x23\xb0\x8e\x41\xda\x82\x38\x00\x07\x36\x67\xbb\x0e\x08\x73\x80\x4c\xd0\x8b\xe9\x2f\x24\xe4\x25\x6e\x05\xda\x04\x37\xa9\xcd\x11\x28\x15\xc4\x51\xef\x74\x96\xc1\x0a\xa1\xf0\x98\x14\x59\xc4\x68\xab\x82\xe0\x8f\xab\xe5\x97\xdb\xaf\x4b\x98\xdf\x7c\x83\x3f\xe6\xf7\xf7\xf3\x9b\xe5\xb7\x73\xd8\x69\x4a\x6d\x41\x80\x5b\x2c\xa1\xf4\x26\xcf\x34\x2a\xd8\x09\xe7\x84\xa1\x03\xd8\x84\x11\x7e\xbf\xbc\xbf\xf8\x32\xbf\x59\xce\xff\x71\x75\x7d\xb5\xfc\x06\xd6\xc1\xa7\xab\xe5\xcd\xe5\x62\x01\x9f\x6e\xef\x61\x0e\x77\xf3\xfb\xe5\xd5\xc5\xd7\xeb\xf9\x3d\xdc\x7d\xbd\xbf\xbb\x5d\x5c\xc6\xb0\x40\x66\x85\x6c\xff\xbf\x73\x9e\x84\xea\x39\x04\x85\x24\x74\xe6\xeb\x4c\x7c\xb3\x05\xf8\xd4\x16\x99\x82\x54\x6c\x11\x1c\x4a\xd4\x5b\x54\x20\x40\xda\xfc\xf0\xcb\x45\x65\x2c\x91\x59\xb3\x0e\x31\xff\x54\x90\x70\x95\x80\xb1\x14\x81\x47\x84\xbf\xa7\x44\xf9\xac\xd7\xdb\xed\x76\xf1\xda\x14\xb1\x75\xeb\x5e\x56\xc2\xf9\xde\xc7\xb8\xc9\x98\xa3\xd5\x81\x70\xe9\x84\x44\x07\x1e\x85\x93\x29\xfa\x10\x4c\x78\xd1\xd5\x0a\x0d\xe9\x44\xa3\xf3\x11\x8b\x14\xa4\xcd\x32\x94\xe4\x99\xc1\x26\x5c\xcc\xad\xa7\x6e\xee\xac\x44\xef\xb5\x59\x73\xe0\x70\x45\xaf\x2e\xc2\x06\x29\xb5\xca\xc3\x11\xdc\xdb\x68\xbc\xfe\x8e\x75\x36\x7c\x91\x97\x65\x54\x82\x44\x04\xde\x86\xe8\xc1\x21\xcb\x0c\x15\x78\xbd\x36\x82\x0a\x87\xa1\x97\x56\x08\x1b\x41\x92\xc5\x2e\xd6\x42\x1b\x4f\x7f\x01\x64\x9c\xba\x22\x97\x7b\xb1\xc9\x33\x9c\xf1\x33\xc0\x47\x50\xb8\x2a\xd6\x31\x71\x0a\x96\x4e\x18\x2f\x24\x8b\xbb\x0d\xad\x93\xfd\xa0\x3f\xc2\xd3\xe9\x18\x87\xa7\x4a\x9c\x4c\x86\x67\xd3\x41\x72\x3a\x9c\x9c\xf5\x47\x7d\x3c\x9b\x26\xa3\x31\x4e\xc7\xc3\xd5\x40\x9e\x9e\xe1\x58\x4c\x4e\xc6\xc3\x55\x1f\xc5\xc9\x24\x51\xe3\xd3\x71\x1f\xa7\x0a\x5b\x11\x3c\x06\x60\x37\x83\xd6\x51\xa6\x5b\x4f\x9d\xd2\xfb\x63\xf9\x03\x70\xb2\x1f\x8c\x95\x1c\x4c\xc7\xd8\xed\x0f\x26\x33\xe8\x47\x2f\x6f\x86\x13\x29\x47\x93\x61\xbf\x7b\x32\x83\xc1\xd1\xf9\xe9\x60\x94\x0c\x27\x93\x69\x77\x7a\xf6\xda\x40\xa8\xe4\x74\x9a\x4c\xa7\xdd\xc1\xe4\x0d\x94\x1c\x4c\xfa\xaa\x3f\x45\x86\xea\x97\xc7\x4f\xcd\xc7\x66\x83\x07\x8e\xf2\x20\xd6\x6b\x87\x6b\x41\x58\x56\x2d\x30\x0e\x2f\x12\x1e\x16\x71\xb3\xc1\xcf\x33\x78\x7c\x8a\x9a\xc1\x46\x8a\x2c\x5b\x1e\x72\x56\x35\x15\xce\x78\x78\x97\x88\xcc\xe3\xbb\xa0\x0b\x63\x4d\x97\x2f\x78\x1e\x1f\x01\x2f\x47\x7c\xe8\x6a\xa3\x70\x1f\x2e\xf0\x51\xa2\x9d\x27\x1e\xb3\x62\x13\x10\x45\xc2\xd3\xe4\xdd\x56\x64\x05\xbe\x8b\x40\xc7\x18\xc3\x06\x37\x5c\x54\xe1\x28\x6e\x36\x6a\x97\x33\x48\x0a\x53\x56\xca\xe6\x9e\x5c\xe7\xb1\xd9\x68\xf8\x9d\x26\x99\x1e\x1d\x48\xe1\x11\x5a\x17\xf3\xeb\xeb\xd6\x0c\x5e\xfe\x5c\xdc\xfe\x76\xd9\x9a\x35\x1b\x0d\x76\xb9\x16\x2c\x6d\xa5\x5c\x04\x5b\x91\x45\xa5\xbb\xea\xc7\x7f\x0f\x0f\xb6\xa0\xfa\xd7\x7f\x67\xb3\x32\x5e\x18\x9e\x43\xaf\x07\x9e\x84\x7c\x80\x9c\x1c\x90\x2d\xcd\x9a\xcf\xae\x7f\xbb\xbc\xbe\xfc\x3c\x5f\x5e\xbe\xa2\xb0\x58\xce\x97\x57\x17\xe5\xd1\x5f\x49\xfc\x1f\xfe\x07\x3f\xf3\xdf\x68\x3c\x35\x9f\x6f\x85\x9a\x9c\x37\x1b\x75\xd5\x3c\xf1\x9c\xf2\x3c\x8d\xc2\x18\xd1\x3c\x3c\xb9\x2c\x55\x6b\x86\x3e\xe7\x8e\xe1\x0e\x8a\x9b\x8d\x70\xff\x28\xdf\x5a\x45\xa1\xb9\x42\x86\xb7\xc2\xc1\x03\x1e\xe0\x03\xb4\x5a\xf0\x1e\xc8\x7e\xc1\x7d\x5b\xab\x0e\xbc\x87\x56\x97\x4f\xf8\xe6\x79\xb3\xd1\xa0\x54\xfb\x58\x2b\xff\xaf\x07\x3c\xfc\x1b\x3e\xc0\xeb\xff\xef\xa1\x0f\x7f\xfe\x09\xfd\x57\x34\x31\xe7\x85\xa1\xcd\xd6\x3e\xa0\x0a\x92\xe1\x01\x70\x00\x9b\x4b\xab\xaa\x8d\xc1\x11\xfc\xf3\x77\xc0\x3d\xca\x82\xd0\x07\xba\x98\x1f\xb1\xcd\xec\x3a\x02\xb5\xea\x00\xb3\xed\xf5\x60\xf1\xa0\xf3\xb0\xb8\x4a\x14\x5f\xc2\xf0\x46\x34\x96\x40\x1b\x42\x67\x44\x16\xa4\xed\xab\xf8\x24\xd5\x7c\x6b\xf5\x31\x6a\x6c\xf3\x98\xec\x82\x9c\x36\xeb\x76\xa7\xc3\x31\xea\x04\xda\x7f\x93\x54\xfa\xaa\xd2\x7f\x5e\x15\xe3\xd8\x75\xee\xb0\x2b\xed\x26\x0f\x5f\x19\x66\x6b\x65\xd8\xc3\x3e\x02\x4a\x2d\xef\x6f\x87\xf0\x9f\xc2\x13\x24\xc2\xc8\x67\xa2\x15\xbe\xf6\x77\x0e\x2b\x63\xd5\x26\x3b\x57\xca\xa1\xf7\x81\x51\x50\x42\xcc\x6d\xd6\xee\x77\x5e\xc8\xf5\xcf\x3a\x9d\xce\xcf\x48\x7d\x16\x61\xf7\xbf\x0a\xbc\x5e\x62\x55\xfc\xda\x2c\xbe\xc3\x07\x78\xe3\x41\x12\x57\xad\x13\x87\x5e\xbd\x4d\xda\xcf\x19\x08\xd7\x3f\x7e\x80\x51\xe5\xb2\x84\xb8\x4d\x92\x1f\x61\xbc\xb1\x2f\x65\x12\x14\x17\x22\x62\xd1\xbb\x43\xec\x79\x6d\xb5\x03\x48\x54\x61\xbd\x87\x51\x27\x0a\xd4\xba\xa3\x4e\x15\x4f\x2d\x9d\x44\x14\x19\x1d\x6b\x67\x97\x56\xdf\x07\x42\x52\x21\xb2\x4a\x2e\xfc\xad\x63\x13\x10\xa6\x56\x54\x52\x6e\xee\x46\xb0\xff\xa1\x86\xa0\x76\xe1\xd0\xff\xc8\x07\x27\x8f\xfd\xd4\xe2\x0a\x3b\x7f\x85\xdc\x60\x84\x4e\xf0\x47\x8f\xdd\x56\x2d\x56\x0d\xcd\x00\x57\xce\x42\xce\x7f\x05\x5c\x2d\x2e\xde\x1e\x61\xa9\x36\xca\xf3\x23\x52\x92\xf6\x2f\xa2\xae\x9b\xd9\x16\x3c\x3f\xb9\x86\xdc\xc0\x20\x32\x6f\xab\xaa\x48\xda\xc7\xda\xe4\x05\xc5\x19\x9a\x35\xa5\xf0\xf1\xb9\x40\x47\x39\x2f\x13\xfd\x7c\x37\x82\x93\x28\xe4\xf9\xad\x75\x77\xd4\x79\x3d\x64\xea\x76\x2e\x1b\xf8\xa9\xf9\xdf\x00\x00\x00\xff\xff\x59\x79\xe0\xb4\x74\x0b\x00\x00")

func _4byte_tracerJsBytes() ([]byte, error) {
	return bindataRead(
		__4byte_tracerJs,
		"4byte_tracer.js",
	)
}

func _4byte_tracerJs() (*asset, error) {
	bytes, err := _4byte_tracerJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "4byte_tracer.js", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x39, 0x3f, 0x10, 0x86, 0x6, 0x5d, 0xdd, 0xd0, 0x53, 0x2c, 0x65, 0x6a, 0x99, 0x8, 0xf5, 0xe5, 0xf5, 0xcf, 0xfa, 0xf3, 0x4a, 0xb1, 0xeb, 0x2, 0x77, 0x5a, 0x0, 0x2e, 0x66, 0xb9, 0x8b, 0x6b}}
	return a, nil
}

var _bigram_tracerJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\x5d\x6f\xdb\xb8\x12\x7d\xf7\xaf\x38\xc8\x4b\x62\xc4\xb1\xec\xa4\x89\x13\xe7\xa6\x80\x9a\x8f\xd6\x80\x9b\x04\xb6\xdc\x22\xf7\xe2\x62\x41\x49\x23\x89\x1b\x9a\x14\x48\xca\x8e\x11\xe4\xbf\x2f\x48\xc9\x1f\xed\xa6\xbb\xf5\x83\x41\x71\xe6\x9c\x39\xf3\xc1\x09\x02\x7c\x55\x29\xcf\x78\xc2\x2c\x57\xd2\xe0\x5a\x95\x2b\xcd\xf3\xc2\xe2\xb8\x77\xdc\x43\x54\x10\x9e\x05\x5b\x59\x89\xb0\xb2\x85\xd2\xa6\x15\x04\x3f\x38\xf5\xcf\xbd\x53\xae\x8e\xc8\x16\xa4\xa9\x9a\xef\x7a\x46\x05\x37\xc8\xb8\x20\x70\x83\x92\x69\x0b\x95\xc1\xfe\xe4\x2f\x78\xac\x99\x5e\x75\x5b\x41\x50\x63\xde\x35\x3b\x86\x4c\x13\xc1\xa8\xcc\x2e\x99\xa6\x21\x56\xaa\x42\xc2\x24\x34\xa5\xdc\x58\xcd\xe3\xca\x12\xb8\x05\x93\x69\xa0\x34\xe6\x2e\xb3\x95\xa3\xe4\x16\x95\x4c\x49\xfb\xd0\x96\xf4\xdc\xac\x75\x7c\xbe\x9f\x61\x4c\xc6\x90\xc6\x67\x92\xa4\x99\xc0\x63\x15\x0b\x9e\x60\xcc\x13\x92\x86\xc0\x0c\x4a\x77\x63\x0a\x4a\x11\x7b\x3a\x07\xbc\x73\x52\xa6\x8d\x14\xdc\xa9\x4a\xa6\xbe\x84\x1d\x10\x77\xca\xb1\x20\x6d\xb8\x92\x38\x59\x87\x6a\x08\x3b\x50\xda\x91\x1c\x30\xeb\x12\xd0\x50\xa5\xc3\xb5\xc1\xe4\x0a\x82\xd9\x2d\xf4\x37\x0a\xb2\xcd\x3b\x05\x97\x3e\x4c\xa1\x4a\x82\x2d\x98\x75\x59\x2f\xb9\x10\x88\x09\x95\xa1\xac\x12\x1d\xc7\x16\x57\x16\xdf\x47\xd1\x97\x87\x59\x84\xf0\xfe\x09\xdf\xc3\xc9\x24\xbc\x8f\x9e\x2e\xb1\xe4\xb6\x50\x95\x05\x2d\xa8\xa6\xe2\xf3\x52\x70\x4a\xb1\x64\x5a\x33\x69\x57\x50\x99\x63\xf8\x7a\x3b\xb9\xfe\x12\xde\x47\xe1\xa7\xd1\x78\x14\x3d\x41\x69\xdc\x8d\xa2\xfb\xdb\xe9\x14\x77\x0f\x13\x84\x78\x0c\x27\xd1\xe8\x7a\x36\x0e\x27\x78\x9c\x4d\x1e\x1f\xa6\xb7\x5d\x4c\xc9\xa9\x22\x87\xff\xf7\x9a\x67\xbe\x7b\x9a\x90\x92\x65\x5c\x98\x75\x25\x9e\x54\x05\x53\xa8\x4a\xa4\x28\xd8\x82\xa0\x29\x21\xbe\xa0\x14\x0c\x89\x2a\x57\xbf\xdd\x54\xc7\xc5\x84\x92\xb9\xcf\xf9\x97\x03\x89\x51\x06\xa9\x6c\x07\x86\x08\xff\x29\xac\x2d\x87\x41\xb0\x5c\x2e\xbb\xb9\xac\xba\x4a\xe7\x81\xa8\xe9\x4c\xf0\x71\xdb\xab\x9d\x81\x4f\x49\x7b\x75\x99\x56\x73\x90\x2d\x02\xab\x59\x42\xda\x04\x5c\x5a\xd2\x92\x89\xcd\x45\xcc\x73\xcd\xe6\x7f\xd4\x9f\xdd\x3f\x0d\x0e\xdc\xf3\x0b\xfa\xfd\xa0\x7f\xde\xee\xb6\x36\xcf\xd4\xa5\x2a\x53\xd7\x18\xad\x3c\xb3\xaa\x67\xba\x79\xa3\x29\x2d\x48\xa8\x72\x4e\xd2\xae\x05\xd5\xcc\x91\x27\x86\x26\x5b\x69\x69\x9a\xcb\x03\x86\x92\x71\xed\xaa\x96\x28\x69\x28\xa9\x2c\x5f\x10\x96\x9a\x5b\x4b\x12\x95\xe4\xd6\xc0\x54\x49\xe1\xde\x80\x20\x6b\x49\x9b\x0e\xcc\x4a\x08\x16\x0b\x32\x6e\x90\xb1\x54\x3a\x35\xdd\x36\x12\x55\x49\xcb\x65\x0e\x59\xcd\x63\xf2\x03\x7e\xfb\xc2\xe6\xa5\xa0\xa1\x3b\xe3\x23\x52\x8a\xab\xbc\xeb\x33\x8c\x34\x93\x86\x25\x6e\xec\x0f\xb0\xd7\x7b\x39\xee\x7f\xa0\xd3\x8b\x01\x9d\x9c\xa6\xac\x77\x7e\x72\x76\x71\x9c\x9d\x9e\x9c\x9f\xf5\x3f\xf4\xe9\xec\x22\xfb\x30\xa0\x8b\xc1\x49\x7c\x9c\x9c\x9e\xd1\x80\x9d\xf7\x06\x27\x71\x9f\x58\xef\x3c\x4b\x07\xa7\x83\x3e\x5d\xa4\xb4\xd7\xc1\x6b\x5d\xba\x21\xf6\x76\x13\xde\x7b\x6b\xfb\xe8\xaf\xfe\x1f\x40\x78\x73\x73\x34\xfd\x1e\x3e\xf6\x87\x38\xee\xac\x2f\xaf\xc3\xf1\xf8\x26\x8c\xc2\xf1\x43\x78\x73\xf4\x38\x9b\x7e\xe9\x0f\xd1\x7f\xdf\xda\x60\xff\x6e\x9d\x8e\xfe\x7b\x7b\x34\x8e\x7e\x69\x9a\xce\x3e\xfd\x6c\xfb\x16\x8e\x67\xb7\x47\x37\xb3\x1d\xc2\xb7\xd6\x6b\xcb\x99\x83\x00\x05\x37\xd6\xcd\x90\xeb\xae\x2f\x2e\x69\xbf\xb4\x54\x99\xa8\x94\x9a\x0e\x1a\xef\xed\x5c\x87\x78\x7d\xeb\xac\xb1\x82\x19\xfb\x50\x3a\xb4\x3b\x41\x95\xa4\xfd\x6e\xf2\xf6\xda\x38\xc4\xfe\x7e\xed\xdf\x60\xe8\xc5\xf7\x5f\xb9\x21\x2a\x6d\xe1\x42\x35\xe0\x8d\x97\xfb\xbe\x71\xc6\x21\x7a\x9b\x58\xc6\x92\x8f\xc4\xe5\x42\x3d\x37\x13\x49\x0b\xd2\xab\xb5\x52\xbf\x8a\x5c\x16\xdf\xbe\x36\x41\xc8\x74\x3d\xda\x41\x87\xc8\x2a\x59\x4f\x82\x50\x79\x07\x69\xdc\x46\x5d\x83\x05\x73\xab\x11\x57\x10\x2a\xef\xaa\xb2\x6b\xd5\xd4\x6a\x2e\xf3\x83\xf6\xe5\xc6\x5e\x4b\xad\x5d\x72\xaa\xc5\xad\xed\x3c\xc3\x41\x63\xbf\x82\x2d\xb8\xe9\x6e\xf4\xb7\x5f\x37\x39\x39\x96\x67\x5a\x61\xc7\xe5\xa1\x3c\xdc\x3f\xda\x3f\x54\xe5\xe5\xc6\xcb\x71\x79\xbb\x2b\xf5\xff\x9e\x69\xf5\xff\x1d\x0a\xf7\xfb\xd1\x78\x78\xb8\x85\xbe\x6d\x4e\x24\x0c\xe1\x9f\x60\xb8\x42\xff\x67\x60\xfd\xbf\xa3\x0d\x57\x58\x2b\xfb\x31\x29\x5c\xd5\xe5\xb8\x6c\x6d\x07\x21\x63\x95\xb0\xbb\xdd\x59\x16\xcd\x6a\x67\x89\xad\x98\xd8\xe9\xba\xca\xc0\xe4\xba\x67\x59\xbd\x74\x1d\x8b\xa7\x78\xb7\x4b\xdb\x30\x9a\xcc\x7b\x71\x98\x10\x3e\x56\x4d\x6a\xea\x95\x1d\x13\x49\x70\xeb\x26\x92\x52\xa8\x05\x69\xbf\xd1\x9a\xcd\xb4\x66\x74\xb0\x8c\x4b\x26\xd6\xdc\xcd\x66\x77\xaf\x9c\xcb\xbc\x96\x56\x9b\x76\xb4\x25\xf6\xa5\xbd\x53\xe1\x9a\x73\x5b\xe4\xba\x6a\x6f\x9d\xd6\x5b\xeb\xaf\x00\x00\x00\xff\xff\x54\x6f\x5d\x62\xf8\x08\x00\x00")

func bigram_tracerJsBytes() ([]byte, error) {
	return bindataRead(
		_bigram_tracerJs,
		"bigram_tracer.js",
	)
}

func bigram_tracerJs() (*asset, error) {
	bytes, err := bigram_tracerJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "bigram_tracer.js", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xd9, 0x15, 0x8a, 0x58, 0x47, 0x83, 0x71, 0x83, 0xe8, 0x5c, 0x98, 0x62, 0xc6, 0x62, 0x70, 0x2a, 0xbf, 0xb2, 0x3, 0xa0, 0x1e, 0x1c, 0x7d, 0xd3, 0xd0, 0x99, 0xde, 0x8b, 0xb8, 0xad, 0x69, 0xc7}}
	return a, nil
}

var _call_tracerJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xe4\x5a\xdd\x6f\x23\x37\x92\x7f\x96\xfe\x8a\x8a\x1e\x62\x69\xad\x91\x64\xcf\x6e\xf6\xd6\x8e\x72\xd0\x79\x3c\x89\x01\x67\x3c\xb0\x3d\x1b\x04\x83\xc1\x81\xea\xae\x96\x18\xb7\xc8\x5e\x92\x2d\x59\x3b\xeb\xff\xfd\x50\x45\xb2\xd5\xad\x0f\x8f\x33\xf7\x81\x00\xf7\x62\xb8\x9b\x55\xc5\x62\xd5\xaf\xbe\xd8\x1a\x0e\xe1\x67\x9d\xca\x4c\x26\xc2\x49\xad\x2c\x5c\xe8\x62\x6d\xe4\x6c\xee\xe0\x74\x74\xf2\x37\xb8\x9f\x23\x3c\xe4\x62\xed\x14\x4c\x4a\x37\xd7\xc6\xb6\x87\xc3\x26\xd1\x5f\x99\x68\xa6\x5f\xa1\x9b\xa3\xc1\x72\x51\xa7\xbc\x9f\x4b\x0b\x99\xcc\x11\xa4\x85\x42\x18\x07\x3a\x03\xb7\x45\x9f\xcb\xa9\x11\x66\x3d\x68\x0f\x87\x9e\x67\xef\x32\x49\xc8\x0c\x22\x58\x9d\xb9\x95\x30\x78\x06\x6b\x5d\x42\x22\x14\x18\x4c\xa5\x75\x46\x4e\x4b\x87\x20\x1d\x08\x95\x0e\xb5\x81\x05\x9d\x6c\x4d\x22\xa5\x83\x52\xa5\x68\x78\x6b\x87\x66\x61\xa3\x1e\x3f\xbe\xfb\x00\xd7\x68\x2d\x1a\xf8\x11\x15\x1a\x91\xc3\xfb\x72\x9a\xcb\x04\xae\x65\x82\xca\x22\x08\x0b\x05\xbd\xb1\x73\x4c\x61\xca\xe2\x88\xf1\x2d\xa9\x72\x17\x54\x81\xb7\xba\x54\x29\x9b\xb0\x0f\x28\x49\x73\x58\xa2\xb1\x52\x2b\x78\x1d\xb7\x0a\x02\xfb\xa0\x0d\x09\xe9\x0a\x47\x07\x30\xa0\x0b\xe2\xeb\x81\x50\x6b\xc8\x85\xdb\xb0\xbe\xc0\x20\x9b\x73\xa7\x20\x15\x6f\x33\xd7\x05\x82\x9b\x0b\x47\xa7\x5e\xc9\x3c\x87\x29\x42\x69\x31\x2b\xf3\x3e\x49\x9b\x96\x0e\x7e\xb9\xba\xff\xe9\xe6\xc3\x3d\x4c\xde\xfd\x0a\xbf\x4c\x6e\x6f\x27\xef\xee\x7f\x3d\x87\x95\x74\x73\x5d\x3a\xc0\x25\x7a\x51\x72\x51\xe4\x12\x53\x58\x09\x63\x84\x72\x6b\xd0\x19\x49\xf8\xf9\xf2\xf6\xe2\xa7\xc9\xbb\xfb\xc9\x7f\x5c\x5d\x5f\xdd\xff\x0a\xda\xc0\xdb\xab\xfb\x77\x97\x77\x77\xf0\xf6\xe6\x16\x26\xf0\x7e\x72\x7b\x7f\x75\xf1\xe1\x7a\x72\x0b\xef\x3f\xdc\xbe\xbf\xb9\xbb\x1c\xc0\x1d\x92\x56\x48\xfc\x5f\xb6\x79\xc6\xde\x33\x08\x29\x3a\x21\x73\x1b\x2d\xf1\xab\x2e\xc1\xce\x75\x99\xa7\x30\x17\x4b\x04\x83\x09\xca\x25\xa6\x20\x20\xd1\xc5\xfa\xc5\x4e\x25\x59\x22\xd7\x6a\xc6\x67\x3e\x08\x48\xb8\xca\x40\x69\xd7\x07\x8b\x08\xdf\xcf\x9d\x2b\xce\x86\xc3\xd5\x6a\x35\x98\xa9\x72\xa0\xcd\x6c\x98\x7b\x71\x76\xf8\xc3\xc6\x57\x35\xc0\xa7\x68\x58\xbb\xcc\xe8\x05\xa0\x9b\x0f\x9d\x11\x09\x1a\x3b\x94\xca\xa1\x51\x22\xaf\x5e\x24\x22\xcf\xff\xd3\x3f\x0c\x7e\xb3\xd0\xa5\xe0\x1b\x8e\x4e\x86\x27\x7f\xe9\x0d\xda\x55\x90\xd2\x41\x55\x4a\x6e\x31\x9a\xe5\x6a\x8f\xe8\x10\xa1\x29\x2e\x31\xd7\xc5\x02\x95\x8b\xea\x90\xdc\x7b\x16\x4b\xfa\x08\xc8\x4a\xc2\x43\xae\x57\x0a\x9c\x11\xca\x8a\x84\xb0\x07\x7e\x67\x8f\x1a\x7c\xa4\x27\x67\x79\x2b\x83\x85\x36\xf4\x7f\x9e\x47\xe0\x47\xdd\x59\xb6\x85\x85\x48\x11\xa6\x6b\x10\x75\x81\xfd\xba\x75\x09\xd7\x1e\x7f\x20\x55\xa6\xcd\x82\xe3\x64\xd0\xfe\xdc\x6e\x05\x0d\xad\x13\xc9\x03\x29\x48\xf2\x93\xd2\x18\x54\x8e\x7c\x5b\x1a\x2b\x97\xc8\x24\xe0\x69\x82\x83\x2f\xff\xfe\x33\xe0\x23\x26\xa5\x97\xd4\xaa\x84\x9c\xc1\xc7\xcf\x4f\x9f\xfa\xed\x96\xc1\x25\x1a\x87\xe9\x85\x56\x7c\x9c\x33\xe8\x74\xfa\x6d\xde\x31\x45\x9b\xa0\x4a\x31\xe5\x63\x3f\x58\x58\xcd\xd9\xf3\xb0\xc2\xa3\x25\xc2\x6f\xa5\x75\x35\x1a\xf6\x9d\x50\xa0\x4b\x8a\xcc\xba\xd1\xa4\x72\x9a\x05\x0a\xfa\x5f\xa1\x61\x45\x07\xed\x56\xc5\x7c\x06\x99\xc8\x2d\xd2\xbe\x4e\x4f\x6c\x22\xe5\x19\x64\xa5\x62\xf6\xee\x1c\x1f\x7b\xf0\xb9\xdd\x6a\x2d\x85\x01\xeb\x0c\x8c\xa1\xd3\x39\x0f\xcf\x12\xc6\x30\xea\x43\x0e\x63\x98\xe3\xe3\x20\x47\x35\x73\x73\x5a\x94\x19\x10\xe7\xc0\x96\x53\x8a\x7c\x35\xeb\x8e\xfa\x70\xda\x83\xf1\x78\x0c\x9d\xd1\x63\xc7\x8b\x6c\x11\xff\x29\xd1\x3f\xb5\x5b\x2d\x82\x49\xf7\x1c\x24\x7c\x0f\xf9\x39\xc8\xe3\xf1\x69\xa0\xa2\x9d\x12\x9d\x22\x8c\x29\x37\x5b\xbc\x52\xae\x26\xbc\x2b\x49\x72\x1f\x4e\xbe\xeb\x91\xa4\x16\xe9\x78\x3c\x86\x3b\xde\x76\x40\x76\xb9\x98\x0b\x73\xa1\x53\xec\x92\x90\x9e\xdf\xae\xdd\x6a\x19\x74\xa5\x51\x74\xa6\xf3\x76\xeb\x29\x58\xdd\x3a\x2c\xc8\xc5\x52\x2d\xf5\x43\xc0\x2e\xf9\x68\x0d\xba\x60\x1d\x18\x7c\xe4\xdc\xca\xb7\x68\x07\xed\x16\xf1\xd5\xac\x96\xeb\x59\x1f\xd2\xa9\x3f\x00\x95\x22\x51\xb8\xd2\x20\x83\x0c\x8d\xd1\xc6\x82\x5c\x2c\x30\x95\xc2\x61\xbe\x0e\xd6\xe4\x05\x18\x43\xae\x67\x83\x19\xba\x4b\x7a\xec\xf6\xa2\x39\xfd\xea\x37\xe3\x31\xd7\x88\x4c\x2a\x4c\x83\x7d\xdc\x5c\xda\x41\x26\xca\xdc\x55\xfb\xb2\x25\xfc\x01\xa3\x79\x87\x43\xf8\x05\x41\xab\x7c\x0d\x09\xd5\x02\x31\xa5\x24\x6a\xd7\xd6\xe1\x22\x1c\xce\xf6\x21\x13\x96\x00\x24\x33\x58\x21\x14\x06\x5f\x25\x73\x24\x40\xab\x04\x23\x06\xd6\x96\x91\x3e\x06\xda\x6d\xa0\x8b\x81\xd3\xef\xca\xc5\x14\x4d\xb7\x07\xdf\xc2\xe8\x31\x1b\x91\x9f\xf9\x9f\xa8\x7b\xe0\xa9\xf9\x53\x17\xe1\xa0\xcc\xef\x9d\xd5\xed\xd5\x74\xbd\xca\x40\x80\xc2\x15\x24\x21\x34\xc8\x2b\x53\x94\x6a\x06\x89\x41\xe1\x30\xed\x83\x48\x53\x70\xda\x87\x63\x15\x7c\xcd\x2d\xe1\xdb\x6f\xa1\x4b\x9b\x8d\xe1\xe8\xe2\xf6\x72\x72\x7f\x79\x04\xff\xfa\x17\x34\xde\x9c\x1e\xf5\x6a\x9a\x49\x75\x93\x65\x41\x39\x16\x38\x28\x10\x1f\xba\x27\xbd\xc1\x52\xe4\x25\xde\x64\x5e\xcd\x40\x7b\xa9\x52\x18\x07\x9e\xe3\x6d\x9e\xd3\x06\x0f\x31\x0d\x87\x30\xb1\x16\x17\xd3\x1c\x77\xb3\x54\x48\x63\x9c\xd1\xac\xa3\xba\x42\xe8\x4b\xf4\xa2\xc8\x91\x50\x55\xc5\x82\x37\x3f\x6b\xdc\x72\xeb\x02\xcf\x00\x00\x74\xd1\xe7\x17\x84\x78\x7e\xe1\xf4\x4f\xf8\xc8\x3e\x8a\x26\x24\x54\x4d\xd2\xd4\xa0\xb5\xdd\x5e\xcf\x93\x4b\x55\x94\xee\xac\x41\xbe\xc0\x85\x36\xeb\x81\xa5\xb2\xd1\xe5\xa3\xf5\xfd\x49\x23\xcf\x4c\xd8\x2b\x45\x3c\x01\xa9\x3f\x0a\xdb\xdd\x2c\x5d\x68\xeb\xce\xe2\x12\x3d\xc4\x35\xb6\x05\xb1\x1d\x8d\x1e\x8f\x76\xad\x35\xea\x6d\x90\x70\xf2\x5d\x8f\x58\x9e\xce\x2b\x7c\x57\xb9\x73\x50\x94\x76\xde\x65\x38\x6d\x56\x37\x89\x70\x0c\xce\x94\xb8\x17\xfe\x0c\xa9\x5d\x38\x59\xcc\x33\xca\xa4\xce\x94\x09\xc3\x6a\x26\x38\xcf\x72\xa4\x0b\x2a\x47\xb6\x9c\xb2\xcd\x9d\xd6\xbb\xe8\x0a\x50\xba\xbb\xbc\x7e\xfb\xe6\xf2\xee\xfe\xf6\xc3\xc5\xfd\x51\x0d\x4e\x39\x66\x8e\x94\x6a\x9e\x61\x93\x29\x59\x5c\x73\xf5\x23\xf1\xbc\x3a\xf9\xc4\xd9\x72\x3b\xd8\x5b\x87\x68\xe1\xb3\xb7\xd6\xd3\xf3\x42\xfd\x9b\xdf\x23\x3a\x72\xc0\xc7\x4f\x9b\x0d\x9e\x23\xf5\x1e\xfa\xec\x91\xa9\x8b\xa7\x7a\x36\xda\x13\xe0\x0b\x74\x73\x9d\x72\xc6\xf5\xed\xfd\xc6\x35\xa9\x56\xf8\xfb\xc3\x7c\x72\x7d\xdd\x08\xf2\xc9\xf5\xf5\xc5\xcd\x9b\x46\xe0\xbf\xb9\xbc\xbe\xfc\x71\x72\x7f\xb9\x4d\x7b\x77\x3f\xb9\xbf\xba\xe0\xb7\x31\x27\x0c\x87\x70\xf7\x20\x0b\x4e\xdd\x9c\x10\xf5\xa2\xe0\xc6\xa9\xd2\xd7\xf6\xc1\xcd\x35\xf5\xe0\x26\xd4\xe5\x4c\xa8\x24\x56\x0c\x1b\x91\xe0\x34\xe1\x40\xc7\x00\xdc\xcd\x2f\x75\xf4\xf7\x2a\x6c\x48\xfb\xde\x60\xd8\x34\xed\x3a\x1d\xf5\xda\x18\xd4\x7b\x84\xb3\x2a\x67\xae\xee\xcb\x0f\x09\xff\x0e\x23\x38\x83\x93\x90\x9e\x9e\xc9\x7f\xa7\x70\x4c\xe2\xbf\x22\x0b\xbe\xde\xc3\xf9\xc7\xcc\x85\x4e\x33\x71\x24\x77\xfa\xff\x3e\x47\xea\xd2\xdd\x64\xd9\x19\x6c\x1b\xf1\xcf\x3b\x46\xac\xe8\xaf\x51\xed\xd2\xff\x65\x87\x7e\x93\x4f\x09\x55\xba\x80\x6f\x76\x20\xe2\xb3\xd9\x37\x5b\x71\x10\x8c\xcb\x5d\x23\x4b\x83\xf1\x81\x0c\x7e\xda\xc4\xf0\xa1\x6c\xf1\xdf\xca\xe0\x7b\xbb\x5f\xea\x71\x9b\xfd\x6d\x1f\x0c\x3a\x23\x71\x49\x93\xf6\x91\x65\x91\x34\x1e\xe8\x95\x50\x09\x0e\xe0\x17\xf4\x12\x15\x22\x27\x97\x30\x4e\x50\xe3\xc3\xad\x34\x8d\x04\x61\x52\x65\x88\x09\xee\xfa\x0d\xc2\x42\xac\x69\x52\xcd\x4a\xf5\xb0\x86\x99\xb0\x90\xae\x95\x58\xc8\xc4\x7a\x79\x3c\x4a\x18\x9c\x09\xc3\x62\x0d\xfe\xa3\x44\xeb\xc2\x44\x24\x12\x57\x8a\x3c\x5f\xc3\x4c\xd2\xec\x4a\xdc\xdd\xd3\xd7\xa3\x11\x58\x27\x0b\x54\x69\x1f\xbe\x7b\x3d\xfc\xee\xcf\x60\xca\x1c\x7b\x83\x76\x2d\x8d\x57\x47\x8d\x8d\x73\xe6\xbb\xaf\x19\xba\x37\x58\xb8\x79\xb7\x07\x3f\x1c\x28\x32\x07\x92\xfb\x5e\x5a\x78\x05\x27\x9f\x06\xa4\xd7\xb8\x81\x5b\xef\x49\xc0\xdc\x62\x90\x46\x33\xe4\xcd\x9b\x9b\xee\x83\x30\x22\x17\x53\xec\x9d\xf1\xfc\xcf\xb6\x5a\x89\x30\x6f\x91\x53\xa0\xc8\x85\x54\x20\x92\x44\x97\xca\x91\xe1\xe3\xe8\x94\xaf\x29\xbf\x1f\xb9\x28\x8f\x47\x65\x91\x24\x68\x6d\x4c\xf7\xec\x35\x52\x47\x2c\x88\x1b\xa4\xb2\x32\xc5\x9a\x57\x28\x3b\x68\x4e\xcd\x81\x62\x25\xf3\x3c\x0a\x5c\x68\x4b\x9b\x4c\x11\x56\x86\xc6\x3c\x2b\x55\xc2\x17\x2f\x29\x92\xb5\x2d\x68\x05\x02\x72\xcd\xb7\x3d\x1c\xe3\x20\xcc\xcc\x0e\x7c\xbe\xa7\x6d\x29\xe7\x28\xbd\x1a\x34\x81\x5c\x87\x2a\x4f\x4e\x5b\x3d\x86\x02\x7c\x94\xd6\x71\xab\x4a\x5a\x4a\x0b\x1e\xc9\x52\xcd\xfa\x50\xe8\x82\xf3\xf4\x97\xca\x59\x48\xd6\xb7\x97\x7f\xbf\xbc\xad\x3a\x8a\x97\x3b\x31\x0e\x13\x9d\x6a\x00\x85\x38\x6c\x76\x42\x16\xf0\xd0\xda\x1e\x41\x69\xd7\x4e\x87\xd3\x85\x77\x75\x24\xfc\xc2\xb6\x54\xfe\xa9\xc4\xed\x6b\x2c\x5a\x07\x76\xfa\x62\x5e\x66\x4d\x9b\xc8\x3b\x2c\xeb\xc5\x4a\x06\xa9\x95\x57\x9b\x79\x66\x4f\x6c\x8d\x0f\xc4\x16\x99\x7a\xd3\x26\xbc\xaf\x79\x36\x17\xd6\x6d\x30\x3a\x43\x3f\x33\xd6\x7d\x61\xcb\xdc\xd9\xad\x32\xb6\x9d\x27\x75\x11\x8b\x25\x29\xc5\x19\x98\x6a\xdc\xf6\x34\xb3\x6f\xe1\xb4\x4a\xdc\x1e\x95\xae\x1e\x9d\x02\x3c\x51\x2d\x4b\xf2\x7a\x34\xa6\xf0\x0e\x60\xdd\x75\xe9\x28\x32\xa8\x95\xd9\xd4\x81\x99\xb0\x1f\x2c\x07\x40\xa8\x04\x53\x39\xa3\xb1\x3c\x2e\x5e\x29\x78\x05\xf1\x81\xea\x1b\xbc\x6a\x24\x94\x3d\x85\xa2\x95\x62\x8e\x0e\x61\x23\xe2\x1c\xb6\x5e\x91\x20\x6f\x0e\x36\x9a\x41\xb7\xdb\xa7\x8c\x82\x34\x32\xd8\x37\x06\xdd\x00\xff\x51\x8a\xdc\x76\x47\x55\xdf\xe4\x4f\xe0\x34\x57\xfa\x71\x55\xeb\x23\xe8\x88\xa7\xd1\x89\x05\x81\x9e\x2d\x58\x23\xb2\xa5\x53\x5f\xc0\x53\x7c\x56\x42\x13\xc7\x95\x2f\x43\x8c\xee\x8d\x98\x3a\x01\x74\xaa\xde\x28\x13\x32\x2f\x0d\x76\xce\x61\x4f\x06\xb6\xa5\xc9\x44\xc2\xbe\xb4\x08\x7c\x23\x60\xc1\xea\x05\xce\xf5\xaa\x06\xf9\xad\x3c\xbe\x0b\x8e\x0a\x07\x5b\x95\x94\x2f\x20\x85\x85\xd2\x8a\x19\xd6\xc0\x51\x19\x3c\x3a\x6a\xef\x35\xc5\x57\x43\xe7\xb8\x7a\xfc\x02\x8a\xfc\x2e\x5f\x84\xc6\x73\xd8\xd8\xeb\xe5\x9d\x86\x2f\x12\x71\xdb\x57\x7b\x88\xaa\xfa\xae\xac\x42\xce\xef\xf1\xfb\xff\x8e\xe3\xbd\xe7\xc3\xdf\x97\x06\xda\x36\xad\x3f\x63\x93\xd8\x9f\xb4\x39\x78\x3e\x8f\x82\x6a\xf5\x10\x00\x0e\x35\x91\x04\x55\xf5\x1b\x26\x6e\x03\x57\xee\xfb\xe8\xa9\x30\xb8\x94\xba\xa4\x92\x8e\xff\xef\x27\xef\xaa\xb3\x7e\xda\xdc\x6b\x32\x26\xea\x17\x9b\xab\x79\xf8\x7a\xe2\x9b\xd2\x5a\x69\xd2\xdc\xc2\x84\xeb\xce\xcc\x7f\xd7\x68\x31\xff\x33\x17\x9c\x21\x89\x38\x5d\x50\xd7\x15\x2a\x5f\x6e\x50\xa4\xeb\xaa\xef\xe8\xfb\x7e\x0f\xe6\x42\xa5\x61\xe6\x13\x69\x2a\x49\x1e\x03\x9c\x34\x14\x33\x21\x55\x7b\xaf\x19\xbf\xd8\xec\xec\x83\xdb\xce\x08\x51\x2f\xd2\x61\x56\xa7\xc1\x9a\x35\x6e\xbf\xa0\x18\x6f\x05\xe8\xf6\x5d\x6d\xb8\xee\xd5\xca\x96\x0b\x1e\x38\x40\x2c\x85\xcc\x05\x0d\xb9\xdc\xc8\xaa\x14\x92\x1c\x85\xf2\xdf\xd1\x30\x73\x7a\x89\xc6\xb6\x5f\x10\x39\x5f\x13\x38\x5b\x19\x37\x3e\x06\x73\xbc\x3c\x11\xbc\x34\x0d\xf8\xe3\xbf\xcd\x85\x73\x01\x5e\x35\xf3\xfa\x70\x95\x8e\x3f\xb1\xa2\x72\xed\x97\xc5\x29\xf7\x63\x44\xf3\x03\x8c\x6a\xe3\xcf\xff\x50\xe4\xfe\x21\x03\x77\x17\xb6\xd7\x55\x3f\x19\x0c\xea\xb4\xee\x43\x8e\x82\x07\xdc\xf8\x51\x35\x8e\x12\xcf\xcd\xdb\x31\x23\xf8\x0e\x74\x27\x25\xf0\x3d\xe7\x1c\xe3\xe5\x95\x9f\xca\xa6\x88\x0a\xa4\x43\x23\x68\x94\x25\xc4\x86\xcf\x6e\xa4\xa5\x65\x71\xec\x6b\x49\x81\x1c\x04\x87\x6f\x60\xd4\x48\x48\x35\x1b\xb4\x5b\xfe\x7d\x2d\x87\x24\xee\xb1\x91\x43\xa4\x92\x4e\x8a\x5c\xfe\x13\x37\x76\x06\xbe\x71\xa8\xe2\xc3\x3d\xc6\x3e\x77\x4f\x7c\x54\x8b\x30\xaa\xb5\xf2\xf4\x9a\x47\xfa\x43\x3c\x7e\x11\x3a\x9d\x2d\xa6\x03\xc3\x4c\x5c\xda\x65\x08\x97\x23\x07\x78\xe2\xd5\xc9\xb6\x6e\x1c\xd1\x07\x78\x7c\xb4\xef\xe1\xf0\xf1\x7c\x98\x2b\xc4\xfb\x36\xa7\x1f\x72\x0f\xf1\x85\xd5\xdd\x83\xc5\x76\xe8\x00\x5f\xd5\x2d\xed\x9a\x50\x2e\x9e\xf1\x15\x2f\x36\x74\xdc\x0a\x91\x11\x85\xf3\xfe\xcf\x5d\x4d\x22\x1f\xc7\x4f\xed\xd8\xfc\x31\x00\xc3\xad\x60\x75\x29\x18\xf1\xc1\x17\x67\x5b\x37\x83\x11\x07\xfe\x56\x6d\xeb\x1e\xd0\x7b\xdc\x2f\x6d\x7f\xc3\xa8\x3c\xdb\xc8\xbd\x4c\x3a\x13\xd6\x8b\xd9\xca\xd6\xde\x43\xbd\xbd\x0c\xe4\xb7\xb3\xfd\x0c\xb4\xb4\x87\x69\xeb\x6e\xb2\xf2\xa3\x5f\xf5\xae\x39\xab\xaf\xfa\x57\xe1\xa0\x72\x51\xb3\x8d\x5c\xb0\x6d\x9e\xce\x0f\x79\x23\xa4\xb5\xfd\x75\x96\x6c\x5e\xe5\xbd\x03\xac\xe7\xcf\xf9\xfa\xd9\x2a\xce\xd2\x63\xd1\x3d\xc0\xca\xd2\x6b\xad\xb6\x7b\x7c\xb9\xc8\x8a\xb8\xae\x62\x83\x66\x9f\x90\x50\x02\x03\x9d\xb7\xec\xf9\x56\x0c\xc4\x66\x1f\x3a\xb8\x5c\x9c\xc1\x9e\xeb\x98\x20\xcc\xb3\xff\x84\x8f\xd5\xdc\x51\x73\xd7\xe6\xe2\x36\x52\x85\x51\xe4\xb4\x7f\xe2\xbf\xb7\x76\x46\xff\x96\xbc\xfe\xeb\xdf\xc4\x28\xca\x6b\xa5\xc8\x3d\xd5\x4d\x96\x59\x74\xe3\x93\x91\xef\xe8\xfd\xf7\x78\xff\xb2\xfe\x45\x3d\xa0\xad\x33\x7a\xec\x1c\x6f\x6f\xd2\x90\xd4\x6f\x3c\x1d\xbf\x3e\xfd\xd3\x69\x7d\x12\x8b\x53\x8f\xdf\xe7\xda\x77\x69\x5f\xb3\x0f\x4b\xde\xb3\xd9\x33\x3b\x0a\x43\x47\xda\xc3\x52\x3f\xf4\x9f\x4e\x3d\x39\xf2\x47\x0b\xcf\x74\x0c\x75\x75\x23\x45\xed\xa6\xc9\x6f\x15\xb1\x17\x7e\x26\xb1\xe3\x0c\x16\xd6\x47\x95\xf6\x6a\x73\x4b\x40\x47\x74\x37\xe5\xa5\x4e\x9c\xb0\x3b\x67\xb0\xf7\x3a\xab\x0f\x9d\x05\x5a\x1a\xb3\x9b\x14\x5e\x8d\xa7\x88\xb1\xf0\x13\x06\xff\x03\x00\x2a\xbe\xf2\x9f\x18\x50\x5b\x2f\xf5\x71\x09\x0c\xfa\x6f\xe7\x3c\xe4\x53\xa5\xd7\x53\x1e\xa8\x4a\x4b\x87\xdb\x94\xf0\x14\xad\x34\x98\x42\x26\x31\x4f\x41\xa7\x68\xf8\x2a\xf4\x37\xab\x95\xff\x95\x04\x1a\x2e\xd4\xfe\x27\x32\xfe\xd7\x44\xfc\xc3\x1d\x25\x13\x74\x6b\xc8\x50\xf0\xcf\x1d\x9c\x86\x42\x58\x0b\x0b\x14\x4a\xaa\x59\x56\xe6\xf9\x1a\xb4\x49\x91\x84\x57\x57\x60\xd4\x3d\x68\x28\x2d\x1a\x0b\xab\xb9\x0e\x53\x02\x4f\xbe\x05\x0d\xf2\xd2\xf5\xc3\x85\xbf\xb4\x45\x2e\xd6\x20\x1d\x4d\x24\xe1\x50\xf5\x86\xa2\xfa\x8d\x01\xff\x50\x41\x47\x73\x37\xcb\x40\xbc\x2c\x6b\xd6\x01\x7e\x4d\x4f\xcd\x0a\x10\xee\x8a\x9a\xb9\x7f\xf3\x29\xa4\x99\xe8\x63\xd7\xdc\xcc\xe6\xf5\x1e\xbc\x99\xb2\x79\x85\x9f\x9a\xc9\xba\x76\x07\xc1\x0b\x9c\x42\x2a\x06\x7e\xda\x4a\xdf\xac\x65\xc8\xdf\xfe\x67\x46\x15\x39\x3f\xf5\x3d\x10\x3d\xc8\x82\x4a\xd5\x58\x56\xff\xfd\x0d\x19\xee\x01\xd7\xd4\x50\x7a\xfb\xd5\x3a\x6e\xff\xe2\xe3\x03\xae\x0f\xb4\xd9\x21\x1d\xd6\xe8\xaa\x28\x88\x19\xd1\xaf\x3d\x53\x48\x2a\x2d\xe4\x78\x74\x0e\xf2\xfb\x3a\x43\x1c\x0a\x40\x1e\x1f\xc7\x3d\xeb\xeb\x1f\xe5\xa7\x18\xa1\x55\x34\x6c\xad\xf7\x1a\x1a\xc5\x9f\x00\x31\x0d\x05\x4c\xfb\xa9\xfd\x5f\x01\x00\x00\xff\xff\xb3\x38\x12\x96\x6c\x2a\x00\x00")

func call_tracerJsBytes() ([]byte, error) {
	return bindataRead(
		_call_tracerJs,
		"call_tracer.js",
	)
}

func call_tracerJs() (*asset, error) {
	bytes, err := call_tracerJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "call_tracer.js", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x4e, 0x26, 0x97, 0x6c, 0xcb, 0x86, 0x49, 0x7c, 0x8d, 0xd, 0x97, 0x5f, 0xe2, 0x8e, 0x33, 0xf9, 0x32, 0x4a, 0xc5, 0xcd, 0x20, 0x6, 0x18, 0xe9, 0xa7, 0x9f, 0x3e, 0x7c, 0x58, 0xb0, 0xea, 0xbd}}
	return a, nil
}

var _evmdis_tracerJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x57\xdf\x6f\xda\xca\x12\x7e\x86\xbf\x62\x94\x27\x50\x29\x60\x63\x08\x38\x27\x47\xe2\xa6\xf4\x1c\xae\xd2\x24\x02\x72\x8f\x2a\x94\x87\x05\xc6\xb0\xaa\xf1\x5a\xbb\x6b\x72\xb8\x55\xfe\xf7\xab\xd9\x59\x03\xf9\x75\xdb\x4a\xa7\x0f\x3b\xb5\x77\xbe\x6f\xbe\x9d\x19\xcf\x92\x56\x0b\xae\x54\xbe\xd7\x72\xbd\xb1\x10\xb6\x83\x73\x98\x6d\x10\xd6\xea\x23\xda\x0d\x6a\x2c\xb6\x30\x2c\xec\x46\x69\x53\x6d\xb5\x60\xb6\x91\x06\x12\x99\x22\x48\x03\xb9\xd0\x16\x54\x02\xf6\x85\x7f\x2a\x17\x5a\xe8\x7d\xb3\xda\x6a\x31\xe6\xcd\x6d\x62\x48\x34\x22\x18\x95\xd8\x47\xa1\x31\x86\xbd\x2a\x60\x29\x32\xd0\xb8\x92\xc6\x6a\xb9\x28\x2c\x82\xb4\x20\xb2\x55\x4b\x69\xd8\xaa\x95\x4c\xf6\x44\x29\x2d\x14\xd9\x0a\xb5\x0b\x6d\x51\x6f\x4d\xa9\xe3\x8f\x9b\x7b\xb8\x46\x63\x50\xc3\x1f\x98\xa1\x16\x29\xdc\x15\x8b\x54\x2e\xe1\x5a\x2e\x31\x33\x08\xc2\x40\x4e\x6f\xcc\x06\x57\xb0\x70\x74\x04\xfc\x4c\x52\xa6\x5e\x0a\x7c\x56\x45\xb6\x12\x56\xaa\xac\x01\x28\x49\x39\xec\x50\x1b\xa9\x32\xe8\x94\xa1\x3c\x61\x03\x94\x26\x92\x9a\xb0\x74\x00\x0d\x2a\x27\x5c\x1d\x44\xb6\x87\x54\xd8\x23\xf4\x27\x12\x72\x3c\xf7\x0a\x64\xe6\xc2\x6c\x54\x8e\x60\x37\xc2\xd2\xa9\x1f\x65\x9a\xc2\x02\xa1\x30\x98\x14\x69\x83\xd8\x16\x85\x85\xbf\xc6\xb3\x3f\x6f\xef\x67\x30\xbc\xf9\x0a\x7f\x0d\x27\x93\xe1\xcd\xec\xeb\x05\x3c\x4a\xbb\x51\x85\x05\xdc\x21\x53\xc9\x6d\x9e\x4a\x5c\xc1\xa3\xd0\x5a\x64\x76\x0f\x2a\x21\x86\x2f\xa3\xc9\xd5\x9f\xc3\x9b\xd9\xf0\x5f\xe3\xeb\xf1\xec\x2b\x28\x0d\x9f\xc7\xb3\x9b\xd1\x74\x0a\x9f\x6f\x27\x30\x84\xbb\xe1\x64\x36\xbe\xba\xbf\x1e\x4e\xe0\xee\x7e\x72\x77\x3b\x1d\x35\x61\x8a\xa4\x0a\x09\xff\xe3\x9c\x27\xae\x7a\x1a\x61\x85\x56\xc8\xd4\x94\x99\xf8\xaa\x0a\x30\x1b\x55\xa4\x2b\xd8\x88\x1d\x82\xc6\x25\xca\x1d\xae\x40\xc0\x52\xe5\xfb\x9f\x2e\x2a\x71\x89\x54\x65\x6b\x77\xe6\x77\x1b\x12\xc6\x09\x64\xca\x36\xc0\x20\xc2\x6f\x1b\x6b\xf3\xb8\xd5\x7a\x7c\x7c\x6c\xae\xb3\xa2\xa9\xf4\xba\x95\x32\x9d\x69\xfd\xde\xac\x12\x27\xee\xb6\x2b\x69\x66\x5a\x2c\x51\x83\x46\x5b\xe8\xcc\x80\x29\x92\x84\xfc\x2c\xc8\x2c\x51\x7a\xeb\xda\x04\x12\xad\xb6\x20\xc0\x92\x2f\x58\x05\x39\x6a\xda\xf4\x14\x1f\x8d\xdd\xa7\x4e\xe6\x4a\x1a\x61\x0c\x6e\x17\xe9\xbe\x59\xfd\x5e\xad\x18\x2b\x96\xdf\x62\x98\x7f\x57\xb9\x89\x61\xfe\xf0\xf4\xd0\xa8\x56\x2b\x59\x5e\x98\x0d\x9a\x18\xbe\xb7\x63\x68\x37\x20\x88\x21\x68\x40\xe8\xd6\x8e\x5b\x23\xb7\x76\xdd\xda\x73\xeb\xb9\x5b\xfb\x6e\x1d\xb8\x35\x68\xb3\x61\x74\xc0\x6e\x01\xfb\x05\xec\x18\xb0\x67\xc8\x9e\xa1\x8f\xc3\x81\x42\x8e\x14\x72\xa8\x90\x63\x85\xcc\xd2\x61\x97\x88\x59\x22\x66\xe9\x32\x4b\x97\x59\xba\xec\xd2\x65\x96\xae\x17\xdc\x75\xe7\xe9\x32\x4b\xf7\x9c\x9f\x98\xa5\xcb\x2c\x3d\x3e\x72\x8f\x01\x3d\x7f\x44\x06\xf4\x58\x7c\x8f\x01\x3d\x06\xf4\x19\xd0\xe7\xb0\xfd\x90\x9f\x3a\x6c\x98\xa5\xcf\x61\xfb\x3d\x36\x1c\xb6\xcf\x2c\x7d\x66\x19\xb0\xf8\x41\xe0\xf6\x06\x1c\x6f\xc0\xf1\x06\x3e\xab\x65\x5a\x7d\x5e\xdb\x3e\xb1\xed\xd0\xdb\x8e\xb7\x91\xb7\x5d\x6f\x7d\xe6\xdb\x3e\xf5\x6d\x9f\xfb\xb6\xe7\x3b\xd4\xc9\xf3\x05\x9e\x2f\xf0\x7c\x81\xe7\x0b\x3c\x5f\x59\xc9\xb2\x94\x65\x2d\x7d\x31\x03\x5f\xcd\xc0\x97\x33\xf0\xf5\x0c\x7c\x41\x03\x5f\xd1\xc0\x97\x34\xf0\x35\x0d\x42\xcf\x17\xf6\x63\x08\xc9\x0e\x62\xe8\x34\x20\xe8\xb4\x63\x88\xc8\x06\x31\x74\xc9\x86\x31\xf4\xc8\x76\x62\x38\x27\x1b\xc5\xd0\x27\xdb\x8d\x61\x40\x96\xf8\xa8\x6b\x3b\x44\x48\x8c\x1d\x52\x48\x94\x1d\x92\x48\x9c\x11\x69\x24\xd2\x88\x44\x12\x6b\x44\x2a\x89\x36\x22\x99\xc4\x1b\x45\xac\x23\xea\xb2\x8e\xa8\xc7\x3a\xa2\x73\xd6\x41\xdd\xe7\x00\x03\xd6\x41\xfd\x47\x3a\xa8\x01\x49\x87\xeb\x40\xd2\xe1\x7a\x90\x74\xb8\x2e\x24\x4a\xea\x43\xa7\xc3\x75\x22\x91\x52\x2f\x3a\x1d\xae\x1b\x89\xd6\xf5\x23\xf1\xfa\x8e\x0c\x7a\x81\xb7\xa1\xb7\x1d\x6f\x23\x67\xc3\xc8\x7f\x45\x91\xff\x8c\x22\xff\x1d\x45\x1d\xbf\xef\xfd\xdc\x47\xf0\x44\xdf\x79\xab\x05\x1a\x4d\x91\x5a\x1a\xfe\x32\xdb\xa9\x6f\x34\x9e\x37\x98\x81\x48\x53\x37\xc7\x54\xbe\x54\x2b\x34\x3c\x1f\x17\x88\x19\x48\x8b\x5a\xd0\x05\xa1\x76\xa8\xe9\x6e\x2c\x27\x93\xa3\x23\x4c\x22\x33\x91\x96\xc4\x7e\x86\xd2\x60\x92\xd9\xba\x59\xad\xf0\xfb\x18\x92\x22\x5b\xd2\xe8\xaa\xd5\xe1\xbb\xa7\x00\xbb\x91\xa6\xe9\x46\xd2\xbc\xfd\xd0\x54\xb9\xb9\x80\x52\x67\x22\xde\x92\x49\xd4\x62\x69\x0b\x91\x02\xfe\x8d\xcb\xc2\xcd\x42\x95\x80\xc8\xbc\x72\x48\x78\xe0\x57\x1c\xfe\x24\x6a\xaa\xd6\x0d\x58\x2d\x28\x78\x19\xc2\x58\xcc\x4f\x23\xd0\xb5\x81\x3b\xd4\xfb\x92\xcb\x5d\x83\x14\xf2\x3f\x5f\x7c\x38\x24\x6a\xc2\xbd\xc9\x5c\xad\x54\x76\x42\x43\xa2\xc5\x16\xe1\xf2\xf4\x74\xc7\xff\x36\x53\xcc\xd6\x76\x03\x1f\x21\x78\xb8\xa8\x7a\x04\x6a\xad\x34\x5c\x42\xaa\xd6\xcd\x35\xda\x11\x3d\xd6\xea\x17\xd5\x4a\x45\x26\x50\x73\xbb\x4c\x5f\x71\xdc\xf3\x33\xf7\xea\xec\x01\x2e\x19\x4a\x9e\x4f\x80\xa9\x41\x20\x80\xa7\xf9\x84\xb9\xdd\xd4\xea\x70\x79\x2a\xc5\xc7\xf7\x74\x2a\xa7\x4b\x05\x2e\xf9\xa9\xa2\xf2\x18\xe8\x1f\x11\xa8\xbc\x69\xd5\x4d\xb1\x5d\xa0\xae\xd5\x1b\x6e\x7b\x45\x84\x10\xc3\x73\x7e\xde\x2b\xcb\x3c\x7f\x70\xcf\x4f\x24\xc9\xa9\x77\x8a\xa9\xb6\xe5\xc9\x7f\x87\xb6\x8f\xee\xce\x9e\x6b\xdc\xa9\x1c\x2e\xe1\xe0\x38\x7f\x05\xe1\x64\x11\x22\x51\xba\x46\x28\x09\x97\xd0\xbe\x00\x09\xbf\xf1\xd9\xfc\x0d\x36\x67\xb6\xa6\xca\x1f\x2e\x40\x7e\xf8\x50\x77\xa0\x8a\x7f\xcb\x1a\x9b\xe4\xea\x72\xc4\x09\xc9\x11\xbf\xd5\x64\xbd\x69\xd5\xd4\x6a\x99\xad\x6b\x41\xaf\xee\x72\x5f\x79\xa2\xc5\x3c\x4a\xbb\x64\x7f\x97\x12\xef\x54\xf7\x67\x58\x0a\x83\x70\x76\x35\xbc\xbe\x3e\x8b\xe1\xf8\x70\x75\xfb\x69\x74\x16\x1f\x0e\x29\x33\x63\xe9\xe7\x2b\x97\xf8\x24\x6e\xa7\xde\xdc\x89\xb4\xc0\xdb\x84\xeb\x7d\x70\x97\xff\xc5\xd7\xde\xd1\x2b\x6f\x2e\xe0\xfc\x6c\x2d\x8c\x6b\x87\x17\x80\xf6\xbb\x00\xab\xde\xf2\x0f\x9e\xa7\xe1\x39\xc4\x31\xbd\x85\x0a\x4f\x50\x2f\x30\x32\xcb\x0b\x7b\xc0\x6c\x71\xab\xf4\xbe\x69\xe8\x87\x4f\xcd\xe7\xa4\x71\x48\xce\x07\x7f\xee\x17\x14\xc7\x5e\xcf\x8a\x34\x7d\xbe\xc7\x73\xe4\x9d\x4d\x95\x73\x4e\xe6\xbe\x77\x4e\x3e\x02\xd7\x02\xec\xe7\xa3\x2d\x34\x8a\x6f\x17\xc7\x8a\x7e\x1a\x5d\x8f\xfe\x18\xce\x46\xcf\x2a\x3b\x9d\x0d\x67\xe3\x2b\x7e\xf5\xe3\xda\x86\xbf\x54\xdb\xd7\x9d\x70\x3c\x87\x3b\x06\xbc\x6a\xc1\xb7\x5b\xe0\x97\x7b\xe0\x97\x9a\xe0\x58\xd0\x7f\xa2\xa2\xff\xbf\xa4\xff\x74\x4d\x27\xa3\xd9\xfd\xe4\xe6\xa4\x74\xf4\xe7\xca\x4f\x7c\x33\xde\xf5\xed\xba\x05\xaf\xdc\x79\x7c\xf9\x2b\xee\x8d\xc6\x57\x85\x6d\xb8\xd0\x1f\x4a\xd6\x77\xf4\x4e\x67\xb7\x77\xc7\xde\xbb\x1f\x5f\x8d\x0f\x43\xe5\x47\x31\xda\x0d\x68\xbf\xc3\xfa\xef\xfb\x2f\x77\x9f\x46\xd3\x99\x67\x2a\x33\x9b\x2f\x0f\x9f\xe9\x1a\xed\xdd\x55\xed\x64\x06\xca\xa4\x9c\x7f\xd2\xdc\x51\x9a\xcb\xe9\x77\x40\xa7\x98\x1d\xe0\xcf\x6e\x0e\xf8\x08\xed\xbf\xbb\x78\xe4\x3a\x0e\xf7\x97\x05\xf3\x37\x98\x23\x3e\xd6\xf5\xd9\x45\x7a\x3c\xdd\xf3\x3b\x88\xf1\xd5\xca\x53\xf5\xa9\xfa\xbf\x00\x00\x00\xff\xff\x51\x4b\xdc\x7e\x62\x10\x00\x00")

func evmdis_tracerJsBytes() ([]byte, error) {
	return bindataRead(
		_evmdis_tracerJs,
		"evmdis_tracer.js",
	)
}

func evmdis_tracerJs() (*asset, error) {
	bytes, err := evmdis_tracerJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "evmdis_tracer.js", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xd5, 0xe8, 0x96, 0xa1, 0x8b, 0xc, 0x68, 0x3c, 0xe8, 0x5d, 0x7e, 0xf0, 0xab, 0xfe, 0xec, 0xd1, 0xb, 0x3d, 0xfc, 0xc7, 0xac, 0xb5, 0xa, 0x41, 0x55, 0x0, 0x3a, 0x60, 0xa7, 0x8e, 0x46, 0x93}}
	return a, nil
}

var _noop_tracerJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x93\x4f\x6f\xdb\x46\x10\xc5\xcf\xe6\xa7\x78\xc7\x04\x50\xc5\xfe\x39\x14\x70\x8b\x02\xac\x61\x27\x2a\x1c\xd9\x90\xe8\x06\x3e\x0e\xc9\xa1\xb8\xe9\x6a\x87\x9d\x9d\x95\x22\x04\xf9\xee\xc5\x92\x52\x13\x14\x69\x9b\x9b\xb0\xd2\xfb\xbd\x37\xf3\x46\x65\x89\x1b\x19\x4f\xea\x76\x83\xe1\xfb\x6f\xbf\xfb\x11\xf5\xc0\xd8\xc9\x37\x6c\x03\x2b\xa7\x3d\xaa\x64\x83\x68\x2c\xca\x12\xf5\xe0\x22\x7a\xe7\x19\x2e\x62\x24\x35\x48\x0f\xfb\xc7\xef\xbd\x6b\x94\xf4\xb4\x2c\xca\x72\xd6\x7c\xf1\xeb\x4c\xe8\x95\x19\x51\x7a\x3b\x92\xf2\x35\x4e\x92\xd0\x52\x80\x72\xe7\xa2\xa9\x6b\x92\x31\x9c\x81\x42\x57\x8a\x62\x2f\x9d\xeb\x4f\x19\xe9\x0c\x29\x74\xac\x93\xb5\xb1\xee\xe3\x25\xc7\xab\xf5\x13\xee\x39\x46\x56\xbc\xe2\xc0\x4a\x1e\x8f\xa9\xf1\xae\xc5\xbd\x6b\x39\x44\x06\x45\x8c\xf9\x25\x0e\xdc\xa1\x99\x70\x59\x78\x97\xa3\x6c\xcf\x51\x70\x27\x29\x74\x64\x4e\xc2\x02\xec\x72\x72\x1c\x58\xa3\x93\x80\x1f\x2e\x56\x67\xe0\x02\xa2\x19\xf2\x82\x2c\x0f\xa0\x90\x31\xeb\x5e\x82\xc2\x09\x9e\xec\x93\xf4\x2b\x16\xf2\x69\xee\x0e\x2e\x4c\x36\x83\x8c\x0c\x1b\xc8\xf2\xd4\x47\xe7\x3d\x1a\x46\x8a\xdc\x27\xbf\xc8\xb4\x26\x19\xde\xae\xea\xd7\x0f\x4f\x35\xaa\xf5\x33\xde\x56\x9b\x4d\xb5\xae\x9f\x7f\xc2\xd1\xd9\x20\xc9\xc0\x07\x9e\x51\x6e\x3f\x7a\xc7\x1d\x8e\xa4\x4a\xc1\x4e\x90\x3e\x13\xde\xdc\x6e\x6e\x5e\x57\xeb\xba\xfa\x75\x75\xbf\xaa\x9f\x21\x8a\xbb\x55\xbd\xbe\xdd\x6e\x71\xf7\xb0\x41\x85\xc7\x6a\x53\xaf\x6e\x9e\xee\xab\x0d\x1e\x9f\x36\x8f\x0f\xdb\xdb\x25\xb6\x9c\x53\x71\xd6\xff\xff\xce\xfb\xa9\x3d\x65\x74\x6c\xe4\x7c\xbc\x6c\xe2\x59\x12\xe2\x20\xc9\x77\x18\xe8\xc0\x50\x6e\xd9\x1d\xb8\x03\xa1\x95\xf1\xf4\xd5\xa5\x66\x16\x79\x09\xbb\x69\xe6\x7f\x3d\x48\xac\x7a\x04\xb1\x05\x22\x33\x7e\x1e\xcc\xc6\xeb\xb2\x3c\x1e\x8f\xcb\x5d\x48\x4b\xd1\x5d\xe9\x67\x5c\x2c\x7f\x59\x16\x99\x19\x44\xc6\x5a\xa9\x65\xcd\xe5\xbc\x4b\xd1\x26\x76\x43\xca\x8d\x04\x46\x23\xce\xb3\x8e\xb9\x65\xb4\xd2\xe5\x01\xfe\x4c\x4e\xb9\x43\xaf\xb2\x07\xe1\x37\x3a\xd0\xb6\x55\x37\x5a\xc6\x49\xf3\x8e\x5b\x83\xc9\x5c\x21\x35\x7e\x3a\x47\x82\x29\x85\x48\x6d\xbe\x9b\xfc\xb9\x65\x5d\x16\x1f\x8a\xab\xb2\x44\x34\x1e\xb3\xb7\x0b\x07\xf9\x23\x73\x45\x73\x9f\x7a\x82\x8c\x93\xe3\x74\x19\x39\xd4\xef\x6f\xc0\xef\xb9\x4d\xc6\x71\x59\x5c\x65\xdd\x35\xfa\x14\x26\xe8\x0b\x2f\xbb\x05\xba\xe6\x25\x3e\xe0\xe3\xa2\x98\xc8\x3d\x25\x6f\x9f\xa3\x8f\xc3\xf9\x4c\xa8\xb5\x44\xfe\x4c\xcb\x91\xa4\x07\x85\x8b\x61\x3f\x17\x78\x35\xe9\xff\xdb\x42\x39\x7e\xc9\x83\xbc\x9f\x7c\x66\x60\x9c\xab\x6f\x98\x03\x9c\xb1\x52\xbe\x7d\x39\xb0\xe6\xbf\x3d\x94\x2d\x69\x88\x13\x2e\x6b\x7a\x17\xc8\x5f\xc0\xe7\xf3\xc8\x1b\x73\x61\xb7\x2c\xae\xe6\xf7\xcf\x42\xb5\xf6\xfe\xef\x50\xc5\xc7\xe2\xaf\x00\x00\x00\xff\xff\x13\x5b\x7d\x37\xec\x04\x00\x00")

func noop_tracerJsBytes() ([]byte, error) {
	return bindataRead(
		_noop_tracerJs,
		"noop_tracer.js",
	)
}

func noop_tracerJs() (*asset, error) {
	bytes, err := noop_tracerJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "noop_tracer.js", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x4d, 0xcc, 0x83, 0xe9, 0x9e, 0xc1, 0x56, 0x41, 0x6c, 0x6a, 0x3b, 0x46, 0xc9, 0x5f, 0xe1, 0x5b, 0xcd, 0x6b, 0x53, 0x45, 0xcd, 0xfe, 0x1e, 0x86, 0x8c, 0x6b, 0xb, 0x70, 0x73, 0x9f, 0x4c, 0xb1}}
	return a, nil
}

var _opcount_tracerJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x94\xcf\x6e\xdb\x46\x10\x87\xcf\xe2\x53\xfc\x8e\x09\xa2\x92\x69\x7b\x28\xe0\x16\x05\x58\xc3\x4e\x04\xd8\xb2\x21\xd1\x09\x7c\x5c\x92\x43\x71\x9b\xd5\x2e\x31\x3b\x2b\x86\x08\xfc\xee\xc5\x2e\xc5\xc6\x08\x5c\xd4\xd7\xd5\xcc\xf7\xcd\x3f\xb1\x28\x70\xe9\x86\x89\xf5\xa1\x17\xfc\xf2\xfe\xe7\xdf\x50\xf5\x84\x83\xfb\x89\xa4\x27\xa6\x70\x44\x19\xa4\x77\xec\xb3\xa2\x40\xd5\x6b\x8f\x4e\x1b\x82\xf6\x18\x14\x0b\x5c\x07\xf9\x21\xde\xe8\x9a\x15\x4f\x79\x56\x14\x73\xce\x8b\x3f\x47\x42\xc7\x44\xf0\xae\x93\x51\x31\x5d\x60\x72\x01\x8d\xb2\x60\x6a\xb5\x17\xd6\x75\x10\x82\x16\x28\xdb\x16\x8e\x71\x74\xad\xee\xa6\x88\xd4\x82\x60\x5b\xe2\xa4\x16\xe2\xa3\x5f\xea\xf8\xb0\x7d\xc0\x0d\x79\x4f\x8c\x0f\x64\x89\x95\xc1\x7d\xa8\x8d\x6e\x70\xa3\x1b\xb2\x9e\xa0\x3c\x86\xf8\xe2\x7b\x6a\x51\x27\x5c\x4c\xbc\x8e\xa5\xec\xcf\xa5\xe0\xda\x05\xdb\x2a\xd1\xce\xae\x41\x3a\x56\x8e\x13\xb1\xd7\xce\xe2\xd7\x45\x75\x06\xae\xe1\x38\x42\xde\x28\x89\x0d\x30\xdc\x10\xf3\xde\x42\xd9\x09\x46\xc9\xf7\xd4\x57\x0c\xe4\x7b\xdf\x2d\xb4\x4d\x9a\xde\x0d\x04\xe9\x95\xc4\xae\x47\x6d\x0c\x6a\x42\xf0\xd4\x05\xb3\x8e\xb4\x3a\x08\x3e\x6f\xaa\x8f\x77\x0f\x15\xca\xed\x23\x3e\x97\xbb\x5d\xb9\xad\x1e\x7f\xc7\xa8\xa5\x77\x41\x40\x27\x9a\x51\xfa\x38\x18\x4d\x2d\x46\xc5\xac\xac\x4c\x70\x5d\x24\xdc\x5e\xed\x2e\x3f\x96\xdb\xaa\xfc\x6b\x73\xb3\xa9\x1e\xe1\x18\xd7\x9b\x6a\x7b\xb5\xdf\xe3\xfa\x6e\x87\x12\xf7\xe5\xae\xda\x5c\x3e\xdc\x94\x3b\xdc\x3f\xec\xee\xef\xf6\x57\x39\xf6\x14\xab\xa2\x98\xff\xff\x33\xef\xd2\xf6\x98\xd0\x92\x28\x6d\xfc\x32\x89\x47\x17\xe0\x7b\x17\x4c\x8b\x5e\x9d\x08\x4c\x0d\xe9\x13\xb5\x50\x68\xdc\x30\xbd\x7a\xa9\x91\xa5\x8c\xb3\x87\xd4\xf3\x7f\x1e\x24\x36\x1d\xac\x93\x35\x3c\x11\xfe\xe8\x45\x86\x8b\xa2\x18\xc7\x31\x3f\xd8\x90\x3b\x3e\x14\x66\xc6\xf9\xe2\xcf\x3c\x8b\x4c\x37\x34\x2e\x58\xa9\x58\x35\xc4\x71\x3f\x0a\x5e\x1d\x07\x43\x90\xf9\x29\xed\xe5\xef\xe0\x05\x29\xd0\x27\xb5\x0d\xc7\x9a\x38\x16\xaf\xad\x17\x0e\x4d\xbc\x87\xf4\xf7\xa1\xaf\xd4\xa4\xdd\xd6\x53\x8a\xbc\xfa\x74\x8b\x9a\xba\x38\x99\x74\xc9\xac\xac\x57\x29\x3c\x5d\xb5\xb6\x4a\xa8\xcd\xb3\x6f\xd9\xaa\x28\x66\x43\x12\x7f\xf9\xd1\x13\x39\xcf\x5d\xff\x8a\xf2\x6c\x95\xd2\x2e\xf0\x7e\x9d\x25\x8a\x17\x1a\x62\x27\xda\x9e\xdc\x17\x6a\xd3\x6a\xe8\x44\x3c\xa5\x66\xdb\xf3\xa9\x45\xfc\xa7\xdb\x05\xe3\xf3\x6c\x15\xf3\x2e\xd0\x05\x9b\x0c\x6f\x8c\x3b\xac\xd1\xd6\x6f\xf1\x0d\xd2\x6b\x9f\x27\xcb\xbb\x77\x78\x3a\x6b\x3a\x15\x8c\x3c\xf7\x8c\xfd\xf9\x08\x55\x23\x41\x99\x33\x3a\x76\xea\x3a\x28\xbb\xd8\xbb\xf9\x3c\x56\x29\xff\x65\xdf\xa2\x60\xf2\x2f\x39\x94\x31\xc9\x33\x03\xfd\x7c\x58\x35\x91\x85\x16\xe2\x38\x50\xb8\x13\x71\xfc\xa8\x80\x49\x02\x5b\x9f\x70\x31\xa7\xd3\x56\x99\x05\x7c\x3e\xbe\x38\x70\x6d\x0f\x79\xb6\x9a\xdf\x9f\x15\xd5\xc8\xd7\xa5\xa8\x99\xf4\x6c\x16\x78\xca\x9e\xb2\x7f\x02\x00\x00\xff\xff\xdd\xd8\xa1\x0a\x5c\x05\x00\x00")

func opcount_tracerJsBytes() ([]byte, error) {
	return bindataRead(
		_opcount_tracerJs,
		"opcount_tracer.js",
	)
}

func opcount_tracerJs() (*asset, error) {
	bytes, err := opcount_tracerJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "opcount_tracer.js", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x27, 0xe, 0x97, 0x88, 0x9b, 0x53, 0xbb, 0x20, 0x44, 0xd8, 0xf5, 0xeb, 0x41, 0xd2, 0x7e, 0xd6, 0xda, 0x6b, 0xf5, 0xaf, 0x0, 0x75, 0x9f, 0xd9, 0x22, 0xc, 0x6e, 0x74, 0xac, 0x2a, 0xa9, 0xa7}}
	return a, nil
}

var _prestate_tracerJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x57\xdd\x6f\xdb\x38\x12\x7f\x96\xfe\x8a\x41\x5f\x6c\xa3\xae\xdc\x66\x81\x3d\xc0\xb9\x1c\xa0\xba\x6e\x1b\x20\x9b\x04\xb6\x7b\xb9\xdc\x62\x1f\x28\x72\x24\x73\x4d\x93\x02\x49\xd9\xf1\x15\xf9\xdf\x0f\x43\x7d\xf8\xa3\x49\x93\xdd\x37\x9b\x1c\xfe\xe6\xfb\x37\xa3\xd1\x08\x26\xa6\xdc\x59\x59\x2c\x3d\x9c\xbd\xff\xf0\x0f\x58\x2c\x11\x0a\xf3\x0e\xfd\x12\x2d\x56\x6b\x48\x2b\xbf\x34\xd6\xc5\xa3\x11\x2c\x96\xd2\x41\x2e\x15\x82\x74\x50\x32\xeb\xc1\xe4\xe0\x4f\xe4\x95\xcc\x2c\xb3\xbb\x24\x1e\x8d\xea\x37\x4f\x5e\x13\x42\x6e\x11\xc1\x99\xdc\x6f\x99\xc5\x31\xec\x4c\x05\x9c\x69\xb0\x28\xa4\xf3\x56\x66\x95\x47\x90\x1e\x98\x16\x23\x63\x61\x6d\x84\xcc\x77\x04\x29\x3d\x54\x5a\xa0\x0d\xaa\x3d\xda\xb5\x6b\xed\xf8\x72\xfd\x0d\xae\xd0\x39\xb4\xf0\x05\x35\x5a\xa6\xe0\xb6\xca\x94\xe4\x70\x25\x39\x6a\x87\xc0\x1c\x94\x74\xe2\x96\x28\x20\x0b\x70\xf4\xf0\x33\x99\x32\x6f\x4c\x81\xcf\xa6\xd2\x82\x79\x69\xf4\x10\x50\x92\xe5\xb0\x41\xeb\xa4\xd1\xf0\x4b\xab\xaa\x01\x1c\x82\xb1\x04\xd2\x67\x9e\x1c\xb0\x60\x4a\x7a\x37\x00\xa6\x77\xa0\x98\xdf\x3f\x7d\x45\x40\xf6\x7e\x0b\x90\x3a\xa8\x59\x9a\x12\xc1\x2f\x99\x27\xaf\xb7\x52\x29\xc8\x10\x2a\x87\x79\xa5\x86\x84\x96\x55\x1e\xee\x2e\x17\x5f\x6f\xbe\x2d\x20\xbd\xbe\x87\xbb\x74\x36\x4b\xaf\x17\xf7\xe7\xb0\x95\x7e\x69\x2a\x0f\xb8\xc1\x1a\x4a\xae\x4b\x25\x51\xc0\x96\x59\xcb\xb4\xdf\x81\xc9\x09\xe1\xb7\xe9\x6c\xf2\x35\xbd\x5e\xa4\x1f\x2f\xaf\x2e\x17\xf7\x60\x2c\x7c\xbe\x5c\x5c\x4f\xe7\x73\xf8\x7c\x33\x83\x14\x6e\xd3\xd9\xe2\x72\xf2\xed\x2a\x9d\xc1\xed\xb7\xd9\xed\xcd\x7c\x9a\xc0\x1c\xc9\x2a\xa4\xf7\x2f\xc7\x3c\x0f\xd9\xb3\x08\x02\x3d\x93\xca\xb5\x91\xb8\x37\x15\xb8\xa5\xa9\x94\x80\x25\xdb\x20\x58\xe4\x28\x37\x28\x80\x01\x37\xe5\xee\xd5\x49\x25\x2c\xa6\x8c\x2e\x82\xcf\xcf\x16\x24\x5c\xe6\xa0\x8d\x1f\x82\x43\x84\x7f\x2e\xbd\x2f\xc7\xa3\xd1\x76\xbb\x4d\x0a\x5d\x25\xc6\x16\x23\x55\xc3\xb9\xd1\xbf\x92\x98\x30\x4b\x8b\xce\x33\x8f\x0b\xcb\x38\x5a\x30\x95\x2f\x2b\xef\xc0\x55\x79\x2e\xb9\x44\xed\x41\xea\xdc\xd8\x75\xa8\x14\xf0\x06\xb8\x45\xe6\x11\x18\x28\xc3\x99\x02\x7c\x40\x5e\x85\xbb\x3a\xd2\xa1\x5c\x2d\xd3\x8e\xf1\x70\x9a\x5b\xb3\x26\x5f\x2b\xe7\xe9\x87\x73\xb8\xce\x14\x0a\x28\x50\xa3\x93\x0e\x32\x65\xf8\x2a\x89\xbf\xc7\xd1\x81\x31\x54\x27\xc1\xc3\x46\x28\xd4\xc6\x16\x7b\x16\x21\xab\xa4\x12\x52\x17\x49\x1c\xb5\xd2\x63\xd0\x95\x52\xc3\x38\x40\x28\x63\x56\x55\x99\x72\x6e\xaa\x60\xfb\x9f\xc8\x7d\x0d\xe6\x4a\xe4\x32\xa7\xe2\x60\xdd\xad\x37\xe1\xaa\xd3\x6b\x32\x92\x4f\xe2\xe8\x08\x66\x0c\x79\xa5\x83\x3b\x7d\x26\x84\x1d\x82\xc8\x06\xdf\xe3\x28\xda\x30\x4b\x58\x70\x01\xde\x7c\xc5\x87\x70\x39\x38\x8f\xa3\x48\xe6\xd0\xf7\x4b\xe9\x92\x16\xf8\x77\xc6\xf9\x1f\x70\x71\x71\x11\x9a\x3a\x97\x1a\xc5\x00\x08\x22\x7a\x4a\xac\xbe\x89\x32\xa6\x98\xe6\x38\x86\xde\xfb\x87\x1e\xbc\x05\x91\x25\x05\xfa\x8f\xf5\x69\xad\x2c\xf1\x66\xee\xad\xd4\x45\xff\xc3\xaf\x83\x61\x78\xa5\x4d\x78\x03\x8d\xf8\xb5\xe9\x84\xeb\x7b\x6e\x44\xb8\x6e\x6c\xae\xa5\x26\x46\x34\x42\x8d\x94\xf3\xc6\xb2\x02\xc7\xf0\xfd\x91\xfe\x3f\x92\x57\x8f\x71\xf4\x78\x14\xe5\x79\x2d\xf4\x4c\x94\x1b\x08\x40\xed\x6d\x57\xe7\x85\xa4\x4e\x3d\x4c\x40\xc0\xfb\x59\x12\xe6\xad\x29\x27\x49\x58\xe1\xee\xe5\x4c\xd0\x85\x14\x0f\xdd\xc5\x0a\x77\x83\xf3\xf8\xd9\x14\x25\x8d\xd1\xbf\x4b\xf1\xf0\xda\x7c\x9d\xbc\x39\x8a\xeb\x9c\xa4\xf6\xf6\x0e\x06\x27\x71\xb4\xe8\x2a\xe5\xa9\xdc\xa5\xde\x98\x15\x11\xd7\x92\xe2\xa3\x54\x08\x89\x29\x29\x5b\xae\x66\x8e\x0c\x51\x83\xf4\x68\x19\x51\xa7\xd9\xa0\xa5\xa9\x01\x16\x7d\x65\xb5\xeb\xc2\x98\x4b\xcd\x54\x0b\xdc\x44\xdd\x5b\xc6\xeb\x9e\xa9\xcf\x0f\x62\xc9\xfd\x43\x88\x62\xf0\x6e\x34\x82\xd4\x03\xb9\x08\xa5\x91\xda\x0f\x61\x8b\xa0\x11\x05\x35\xbe\x40\x51\x71\x1f\xf0\x7a\x1b\xa6\x2a\xec\xd5\xcd\x4d\x14\x19\x9e\x9a\x8a\x26\xc1\x41\xf3\x0f\x83\x81\x6b\xb3\x09\x23\x2e\x63\x7c\x05\x4d\xc3\x19\x2b\x0b\xa9\xe3\x26\x9c\x47\xcd\x46\x16\x25\x04\x1c\xcc\x0a\xb9\xa2\x24\xd2\xc9\x47\xa6\xe0\x02\x32\x59\x5c\x6a\x7f\x92\xbc\x3a\xe8\xed\xd3\xc1\x1f\x49\xd3\x3c\x89\x23\xc2\xeb\x9f\x0d\x86\xf0\xe1\xd7\xae\x22\xbc\x21\x28\x78\x19\xcc\x9b\xe7\xa1\xe2\xd3\x62\x78\xfa\x59\x50\x43\x1d\xfc\x36\x68\x4d\x5c\x95\x51\x3a\x6a\x3f\x43\x1c\x8f\xbb\xf8\xfc\x27\xb8\xc7\xbe\xb5\xb8\x4d\x68\x12\x26\xc4\xf3\xa0\x75\x8a\x3e\x21\xb7\xb8\x26\x56\xa7\x2c\x70\xa6\x14\xda\x9e\x83\xc0\x19\xc3\xa6\x9c\x42\xbe\x70\x5d\xfa\x5d\xcb\xf5\x9e\xd9\x02\xbd\x7b\xd9\xb0\x80\xf3\xee\x5d\x4b\x81\x21\x14\xbb\x12\xe1\xe2\x02\x7a\x93\xd9\x34\x5d\x4c\x7b\x4d\x1b\x8d\x46\x70\x87\x61\x13\xca\x94\xcc\x84\xda\x81\x40\x85\x1e\x6b\xbb\x8c\x0e\x21\xea\x28\x61\x48\x2b\x0d\x2d\x1b\xf8\x20\x9d\x97\xba\x80\x9a\x29\xb6\x34\x57\x1b\xb8\xd0\x23\x9c\x55\x8e\xaa\xf5\x64\x08\x79\x43\x1b\x85\x45\xe2\x15\xe2\xff\xd0\x6e\x4c\xc9\x6e\x03\xc9\xa5\x75\x1e\x4a\xc5\x38\x26\x84\xd7\x19\xf3\x7c\x7e\x9b\x4e\x26\xd5\xb3\xd0\x82\x01\x68\x3f\xe0\x98\xa2\x01\x49\xea\x1d\xf4\x5b\x8c\x41\x1c\x45\xb6\x95\x3e\xc0\x3e\xdf\x53\x82\xf3\x58\x1e\x12\x02\x2d\x16\xb8\x41\xa2\xd0\xc0\x06\xf5\x30\x24\x5d\xff\xfe\xad\x99\xbe\xe8\x92\x38\xa2\x77\x07\x7d\xad\x4c\x71\xdc\xd7\xa2\x0e\x0b\xaf\xac\xa5\xfc\x77\x14\x9c\x53\x8f\xff\x59\x39\x4f\x31\xb5\x14\x9e\x86\x2d\x9e\x22\xc9\x40\x89\x34\x6d\x07\x3f\x92\x21\xcd\xad\x30\x27\x48\x5d\x33\xa5\xea\x6d\xae\x34\x1e\xb5\x97\x4c\xa9\x1d\xe5\x61\x6b\x69\x8d\xa1\xc5\x65\x08\x4e\x92\x54\x60\x9c\x20\x2a\x35\x57\x95\xa8\xcb\x20\xd4\x71\x83\xe7\x82\xcd\xc7\xfb\xcf\x1a\x9d\x63\x05\x26\x54\x49\xb9\x7c\x68\x36\x48\x0d\xbd\x9a\xe4\xfa\x83\x5e\xd2\x19\x79\x4c\x31\xca\x14\x49\x5b\x64\x44\xd3\xa9\x10\x16\x9d\xeb\x0f\x1a\xce\xe9\x32\x7b\xb7\x44\x4d\xc1\x07\x8d\x5b\xe8\x56\x13\xc6\x39\xad\x6a\x62\x08\x4c\x08\xa2\xb6\x93\x35\x22\x8e\x22\xb7\x95\x9e\x2f\x21\x68\x32\xe5\xbe\x17\x07\x4d\xfd\x73\xe6\x10\xde\x4c\xff\xb3\x98\xdc\x7c\x9a\x4e\x6e\x6e\xef\xdf\x8c\xe1\xe8\x6c\x7e\xf9\xdf\x69\x77\xf6\x31\xbd\x4a\xaf\x27\xd3\x37\xe3\x30\x9b\x9f\x70\xc8\x9b\xd6\x05\x52\xe8\x3c\xe3\xab\xa4\x44\x5c\xf5\xdf\x1f\xf3\xc0\xde\xc1\x28\xca\x2c\xb2\xd5\xf9\xde\x98\xba\x41\x1b\x1d\x2d\xe5\xc2\x05\x3c\x1b\xac\xf3\xe7\xad\x99\x34\xf2\xfd\x96\xc8\xf7\xab\x48\xa0\x8a\x97\xed\x38\xfb\xcb\x86\x84\xde\x61\x7c\x35\x06\xc7\x14\x6d\xc0\xf2\x7f\xf4\xe5\x92\xe7\x0e\xfd\x10\x50\x0b\xb3\x25\xe6\xeb\x50\xeb\x9b\x06\xf7\x20\x64\x1f\x06\x35\x83\xde\xe4\x2d\x32\x49\x13\xda\x8f\xb2\x67\x4f\xca\xa2\x16\x70\xd1\xe2\xbf\x0d\x4f\x5f\x11\xab\xb3\x26\x58\x27\x2a\x7e\x39\x59\xf2\xc2\xfd\x1a\xd7\xc6\xee\x9a\x89\x74\xe0\xe2\xcf\x03\x9b\x5e\x5d\x75\x25\x45\x7f\xa8\xce\xba\x83\x4f\xd3\xab\xe9\x97\x74\x31\x3d\x92\x9a\x2f\xd2\xc5\xe5\xa4\x3e\xfa\xcb\xb5\xf7\xe1\xd5\xb5\xd7\x9b\xcf\x17\x37\xb3\x69\x6f\xdc\xfc\xbb\xba\x49\x3f\xf5\x7e\x50\xd8\x2c\x82\x3f\xeb\x5e\x6f\xee\x8c\x15\x7f\xa7\x09\x0e\x96\xb2\x9c\x3d\xb5\x93\x05\x76\xe7\xbe\x3a\xf9\xe6\x01\xa6\x5b\x62\xce\xeb\xef\xbe\x28\xbc\x7f\x92\x8a\x1f\xe3\xc7\xf8\xff\x01\x00\x00\xff\xff\x0a\x4c\x81\x61\x8d\x10\x00\x00")

func prestate_tracerJsBytes() ([]byte, error) {
	return bindataRead(
		_prestate_tracerJs,
		"prestate_tracer.js",
	)
}

func prestate_tracerJs() (*asset, error) {
	bytes, err := prestate_tracerJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "prestate_tracer.js", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x3f, 0xa9, 0x15, 0x3d, 0xeb, 0xb2, 0xb6, 0xbc, 0x53, 0xbd, 0x27, 0x12, 0xa1, 0x9c, 0x3f, 0xf8, 0x1, 0x8e, 0x6, 0xa0, 0xed, 0x8b, 0x2e, 0x19, 0xaf, 0x71, 0xec, 0xbb, 0x84, 0x77, 0x1c, 0xbc}}
	return a, nil
}

var _revert_tracerJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x55\x5d\x6f\xda\x48\x14\x7d\xe7\x57\x1c\xf1\x04\x8d\x65\x13\x22\xed\x76\x43\xbd\x12\x1b\x25\x0d\x52\x9a\x44\xe0\xb4\xca\xe3\x60\x5f\xe3\x51\x87\x19\x6b\x66\xcc\x87\xaa\xfc\xf7\xd5\xb5\x4d\x02\x81\xdd\x56\xf5\x4b\x9c\xeb\x7b\xce\xb9\xdf\x44\x11\xae\x4c\xb9\xb5\x72\x51\x78\x0c\x07\xe7\x1f\x91\x14\x84\xef\x4a\x6c\xbd\xc6\xb8\xf2\x85\xb1\xae\x13\x45\x48\x0a\xe9\x90\x4b\x45\x90\x0e\xa5\xb0\x1e\x26\x87\x7f\x73\x55\x72\x6e\x85\xdd\x86\x9d\x28\x6a\xdc\xdf\x7f\x61\x5c\x6e\x89\xe0\x4c\xee\xd7\xc2\xd2\x25\xb6\xa6\x42\x2a\x34\x2c\x65\xd2\x79\x2b\xe7\x95\x27\x48\x0f\xa1\xb3\xc8\x58\x2c\x4d\x26\xf3\x2d\xb3\x49\x8f\x4a\x67\x64\x6b\x41\x4f\x76\xe9\x76\xea\x9f\xef\x9f\x70\x47\xce\x91\xc5\x67\xd2\x64\x85\xc2\x63\x35\x57\x32\xc5\x9d\x4c\x49\x3b\x82\x70\x28\xd9\xe2\x0a\xca\x30\xaf\xe9\x18\x78\xc3\xa1\xcc\xda\x50\x70\x63\x2a\x9d\x09\x2f\x8d\x0e\x40\xd2\x17\x64\xb1\x22\xeb\xa4\xd1\xb8\xd8\x49\xb5\x84\x01\x8c\x65\x92\x9e\xf0\x9c\x80\x85\x29\x19\xd7\x87\xd0\x5b\x28\xe1\xdf\xa0\xff\x5f\x8b\xb7\x94\x33\x48\x5d\x2b\x14\xa6\x24\xf8\x42\x78\x4e\x78\x2d\x95\xc2\x9c\x50\x39\xca\x2b\x15\x30\xd1\xbc\xf2\xf8\x36\x49\x6e\x1f\x9e\x12\x8c\xef\x9f\xf1\x6d\x3c\x9d\x8e\xef\x93\xe7\x11\xd6\xd2\x17\xa6\xf2\xa0\x15\x35\x54\x72\x59\x2a\x49\x19\xd6\xc2\x5a\xa1\xfd\x16\x26\x67\x86\x2f\xd7\xd3\xab\xdb\xf1\x7d\x32\xfe\x67\x72\x37\x49\x9e\x61\x2c\x6e\x26\xc9\xfd\xf5\x6c\x86\x9b\x87\x29\xc6\x78\x1c\x4f\x93\xc9\xd5\xd3\xdd\x78\x8a\xc7\xa7\xe9\xe3\xc3\xec\x3a\xc4\x8c\x38\x2a\x62\xfc\xcf\xcb\x9d\xd7\x8d\xb3\x84\x8c\xbc\x90\xca\xed\x8a\xf0\x6c\x2a\xb8\xc2\x54\x2a\x43\x21\x56\x04\x4b\x29\xc9\x15\x65\x10\x48\x4d\xb9\xfd\xe5\x7e\x32\x97\x50\x46\x2f\xea\x9c\x4f\x4d\x20\x26\x39\xb4\xf1\x01\x1c\x11\x3e\x15\xde\x97\x97\x51\xb4\x5e\xaf\xc3\x85\xae\x42\x63\x17\x91\x6a\x98\x5c\xf4\x77\xd8\x61\x3a\x4b\x2b\xb2\x3e\xb1\x22\x25\x0b\x4b\xbe\xb2\xda\xd5\xc4\xdc\x20\xbd\xe0\xd0\xa6\xd7\x5f\xaf\xa7\x09\xe7\xd2\xb2\xb7\x20\xca\x82\x57\x84\xd0\xa0\x65\xe9\xb7\x3b\x58\xb7\x1b\x76\x7e\x74\x00\xb4\xbe\xb3\xda\x7c\x89\x6e\x37\xe8\xd4\x66\x6f\xc6\x2e\x95\xf2\x12\x79\xa5\x53\x9e\xa1\x5e\x41\x9b\x3e\x1a\x0c\x3f\x2b\x61\x99\x0c\x31\xba\xdd\xd1\x81\x55\x22\xc6\x20\x80\x42\x8c\x82\x36\xa1\x22\xbd\xf0\xc5\x9b\x8b\xcc\xc1\x5c\xa1\xab\xe6\x4d\x30\xbd\x41\x80\x61\x1f\x71\x1c\xa3\x3b\xd8\x74\xf7\x45\x6a\x7f\xc4\x18\xbe\xc1\x5f\x5e\xdf\xb8\x9b\xbd\x11\x24\x3e\x41\x8d\x20\xcf\xe2\xe1\x7b\x28\x47\x93\x9a\x8c\x10\xf3\x55\x70\x34\xd1\x7e\x4f\xba\x27\x59\x37\xc0\xf9\x1f\xfd\xd1\x01\x8c\xd3\x3a\x8b\xd1\xd4\x24\xcc\xad\x59\x5e\x15\xc2\x5e\x99\x8c\x7a\xcc\xd6\xdf\x0f\xe6\xf5\xb5\xa9\x34\x63\x9b\xcf\x2f\x6d\x21\xa3\x08\xce\x53\xc9\x5b\x25\xf5\xca\x7c\xa7\xac\x0e\x9c\xab\xbe\x85\x29\xeb\xf0\xea\xb5\xe2\xa6\x7e\xfd\x02\xda\x50\x5a\x79\x72\x61\xa7\x09\x85\xca\xbd\x1e\x28\xb3\x08\x90\xcd\xfb\xf8\xb1\xcf\x9f\x8b\x4a\xf9\x7d\x81\x75\xd1\x6e\x9a\x48\x7d\x25\x54\xcb\xc9\x07\xc3\xe4\x3c\x0a\xad\x6c\xde\xec\x40\x5d\x4b\xa6\xf8\xa9\x90\x25\x77\x4a\x49\x28\x55\xab\x35\xb4\xae\xd9\xa1\x39\x91\x86\xf4\x64\x05\x1f\x11\xb3\x22\xcb\xa7\x73\x37\x90\x3b\x46\x86\xe5\x52\x0b\xb5\xe3\x6e\x57\xcd\x5b\x91\x72\xf1\xdb\x11\x75\x87\xd1\xa5\x7e\xd3\x46\x77\x30\x55\xa9\xdf\x84\x64\xad\xb1\xe0\x51\xa2\xd5\xf2\x72\x2f\xf3\xdd\x4e\x1c\xcd\x97\xa9\x7c\x59\xf9\x5b\xda\x20\x86\x37\xb7\xb4\xa9\x79\x1a\xeb\xbb\xc1\x60\x91\x57\xf7\xd0\xf1\xae\xf6\x86\xc1\xf9\xa0\x5f\x0b\x0e\x3e\xa6\x17\x7f\xfe\x25\x06\x47\x0a\xfc\x64\x54\x97\xf8\x21\xcf\x1d\xf9\xf8\x7c\x30\x3a\xf2\x68\x96\xa1\x71\xd8\x1f\xd8\xb9\x5c\xf0\x1f\x5e\x8d\xb3\xf7\xe2\x07\xac\xc1\xc1\x7f\x67\x17\xc3\x0f\xc3\x7e\x3f\xf4\xa6\x99\xe3\x5e\xbf\xff\x5f\x9a\x77\xf5\x86\xfe\x96\x66\xad\x72\x42\xf8\x17\xd5\xf9\xa7\x3a\xc6\x09\xf8\x7e\x31\x3e\x0c\x8f\xa1\xa4\x33\xc4\x2d\xc1\xd9\x41\x1a\xa7\xbc\x7d\x21\x5d\xb8\x7f\xe8\xb8\xd5\x6c\x6b\xaf\xdc\x51\x53\x6b\xe2\x80\x74\xf6\x3e\xec\x97\x13\x77\xa8\xdd\xfc\x23\x91\xf6\x0e\x74\x5e\x3a\xff\x06\x00\x00\xff\xff\x65\x5b\xce\x57\xc8\x08\x00\x00")

func revert_tracerJsBytes() ([]byte, error) {
	return bindataRead(
		_revert_tracerJs,
		"revert_tracer.js",
	)
}

func revert_tracerJs() (*asset, error) {
	bytes, err := revert_tracerJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "revert_tracer.js", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xfb, 0x92, 0x5f, 0x8d, 0x20, 0x45, 0x65, 0x46, 0xfc, 0xad, 0x19, 0x51, 0x5e, 0x76, 0x1f, 0xf9, 0xed, 0x91, 0xb5, 0x40, 0x30, 0x9a, 0xf, 0x31, 0x15, 0xbd, 0xe4, 0x9b, 0xc, 0xba, 0xb4, 0x55}}
	return a, nil
}

var _trigram_tracerJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x55\x6d\x4f\xe3\x3c\x16\xfd\xce\xaf\x38\xcb\x17\xa8\x28\x4d\x43\x07\x0a\x9d\x65\xa4\x2c\x85\x01\xa9\xd0\xaa\x2d\x3b\x42\xa3\xd1\xca\x4d\x6e\x12\x2f\xae\x1d\xd9\x4e\x4b\x85\xf8\xef\x8f\xec\xa4\x2f\xf0\x30\x7a\xe6\x4b\x55\xfb\xdc\x7b\xee\xb9\x2f\xbe\x09\x02\xdc\xab\x84\xa7\x3c\x66\x96\x2b\x69\x70\xa5\x8a\x95\xe6\x59\x6e\x71\xd2\x3e\x69\x63\x9a\x13\x9e\x05\x5b\x59\x89\xa8\xb4\xb9\xd2\x66\x2f\x08\xde\x19\x85\xe7\xde\x28\x53\xc7\x64\x73\xd2\x54\xce\x77\x2d\xa7\x39\x37\x48\xb9\x20\x70\x83\x82\x69\x0b\x95\xc2\x7e\xb0\x17\x7c\xa6\x99\x5e\xb5\xf6\x82\xa0\xf2\xf9\x14\x76\x0c\xa9\x26\x82\x51\xa9\x5d\x32\x4d\x3d\xac\x54\x89\x98\x49\x68\x4a\xb8\xb1\x9a\xcf\x4a\x4b\xe0\x16\x4c\x26\x81\xd2\x98\xbb\xcc\x56\x8e\x92\x5b\x94\x32\x21\xed\x43\x5b\xd2\x73\xb3\xd6\xf1\xfd\xe1\x11\x03\x32\x86\x34\xbe\x93\x24\xcd\x04\x46\xe5\x4c\xf0\x18\x03\x1e\x93\x34\x04\x66\x50\xb8\x1b\x93\x53\x82\x99\xa7\x73\x8e\x37\x4e\xca\xa4\x96\x82\x1b\x55\xca\xc4\x97\xb0\x09\xe2\x4e\x39\x16\xa4\x0d\x57\x12\x9d\x75\xa8\x9a\xb0\x09\xa5\x1d\xc9\x21\xb3\x2e\x01\x0d\x55\x38\xbf\x06\x98\x5c\x41\x30\xbb\x75\xfd\x83\x82\x6c\xf3\x4e\xc0\xa5\x0f\x93\xab\x82\x60\x73\x66\x5d\xd6\x4b\x2e\x04\x66\x84\xd2\x50\x5a\x8a\xa6\x63\x9b\x95\x16\x3f\xee\xa6\xb7\xc3\xc7\x29\xa2\x87\x27\xfc\x88\xc6\xe3\xe8\x61\xfa\xf4\x15\x4b\x6e\x73\x55\x5a\xd0\x82\x2a\x2a\x3e\x2f\x04\xa7\x04\x4b\xa6\x35\x93\x76\x05\x95\x3a\x86\xfb\xeb\xf1\xd5\x6d\xf4\x30\x8d\xfe\x73\x37\xb8\x9b\x3e\x41\x69\xdc\xdc\x4d\x1f\xae\x27\x13\xdc\x0c\xc7\x88\x30\x8a\xc6\xd3\xbb\xab\xc7\x41\x34\xc6\xe8\x71\x3c\x1a\x4e\xae\x5b\x98\x90\x53\x45\xce\xff\x9f\x6b\x9e\xfa\xee\x69\x42\x42\x96\x71\x61\xd6\x95\x78\x52\x25\x4c\xae\x4a\x91\x20\x67\x0b\x82\xa6\x98\xf8\x82\x12\x30\xc4\xaa\x58\xfd\x71\x53\x1d\x17\x13\x4a\x66\x3e\xe7\xdf\x0e\x24\xee\x52\x48\x65\x9b\x30\x44\xf8\x77\x6e\x6d\xd1\x0b\x82\xe5\x72\xd9\xca\x64\xd9\x52\x3a\x0b\x44\x45\x67\x82\x6f\xdb\x5e\xed\x0c\x7c\x42\xda\xab\x4b\xb5\x9a\x83\x6c\x1e\x58\xcd\x62\xd2\x26\xe0\xd2\x92\x96\x4c\x6c\x2e\xac\xe6\x99\x66\xf3\xff\x55\xe7\xd6\xff\x0d\x0e\xdd\xfb\x0b\xc2\x30\x08\xcf\x1b\xad\xbd\xcd\x3b\x75\xb9\xca\xc4\x75\x46\x2b\x4f\xad\xaa\xa1\xae\x1f\x69\x42\x0b\x12\xaa\x98\x93\xb4\x6b\x45\x35\x35\x34\xd9\x52\x4b\xb3\x3e\x1f\x32\x64\x5a\x95\x45\x55\x33\x37\xcc\xb1\x92\x86\xe2\xd2\xf2\x05\x61\xa9\xb9\xb5\x24\x51\x4a\x6e\x0d\x4c\x19\xe7\xee\x1d\x08\xb2\x96\xb4\x69\xc2\xac\x84\x60\x33\x41\xc6\x0d\x33\x96\x4a\x27\xa6\xd5\x40\xac\x4a\x69\xb9\xcc\x20\xcb\xf9\x8c\xfc\x90\x5f\xbf\xb0\x79\x21\xa8\xe7\xfe\xe3\x1b\x12\x9a\x95\x59\xcb\x27\x39\xd5\x4c\x1a\x16\xbb\xd1\x3f\xc4\x7e\xfb\xe5\x24\xfc\x42\xa7\x17\x5d\xea\x9c\x26\xac\x7d\xde\x39\xbb\x38\x49\x4f\x3b\xe7\x67\xe1\x97\x90\xce\x2e\xd2\x2f\x5d\xba\xe8\x76\x66\x27\xf1\xe9\x19\x75\xd9\x79\xbb\xdb\x99\x85\xc4\xda\xe7\x69\xd2\x3d\xed\x86\x74\x91\xd0\x7e\x13\xaf\x55\xf5\x7a\xd8\xaf\x73\x9c\xfa\xf3\xfe\x5b\xc3\x87\x7f\xf5\xbf\x00\x8e\x8f\x47\x8f\x93\xdb\xb0\x87\xb0\xb9\xb9\xf2\x37\xc7\xf7\x93\xe9\x70\x7c\xbd\x0b\x44\xfd\xfe\xf1\xe4\x47\x34\x0a\x8f\xfb\x8f\xa3\xf0\x73\xc4\xfd\x76\x76\xa1\xab\x68\x30\xe8\x47\xd3\x68\x30\x8c\xfa\x35\xf3\xe4\x76\xfc\x5b\x8b\x8a\xe5\xbd\xa6\xb7\xbd\xd7\x3d\x67\x18\x04\xc8\xb9\xb1\x6e\x9a\x5c\x9b\xe7\xac\x6a\x58\xdd\x53\x5f\x71\xd2\xc6\x9b\x3a\xbb\x1e\x5e\xdf\x9a\x6b\x47\xc1\x8c\x1d\x16\xce\xd5\xfd\x83\x2a\x48\xfb\x15\xe5\xf1\x0a\x34\x3d\xfc\x3c\x38\x68\x1e\x1c\xfc\xaa\xbc\xd6\x48\x9f\x0a\x9b\xf7\xd0\xde\x70\x19\x4b\x9e\x89\xcb\x85\x7a\xae\xe7\x8e\x16\xa4\x57\x50\x45\xac\x92\x7a\xe3\x38\x89\xff\xbd\x07\xbd\xb8\x39\x22\xd3\xf2\xde\xce\xb5\x87\xb4\x94\x55\xb3\x85\xca\x9a\x48\x66\x0d\x54\x09\x2e\x98\x46\xe2\xa2\xe1\x12\x42\x65\xad\x8c\xaa\xe0\x87\x8d\xaf\x1e\xe7\x29\x0e\x2b\xfc\x5f\x97\xb0\x39\x37\xad\x8d\xbe\xc6\xeb\x46\xf3\x06\x18\x16\x06\x97\xeb\x9c\xbe\xfe\x1d\xef\xd7\xa1\x3c\xe5\x16\xaf\x1e\x47\x75\x7e\xdb\xe8\x52\x45\x2d\x4a\x15\x2d\xab\x26\x56\x73\x99\xad\x75\x39\xfc\x99\x56\xb8\x7c\x17\xfb\x67\xfb\xd7\xd1\xc1\xf1\xc1\xd1\xbb\xbb\xb0\xba\x53\xc5\x36\x23\x8f\xbb\x86\xfd\x7c\xa6\xd5\xaf\x8f\x89\x6c\x80\xa3\xa3\x5d\x49\x24\x0c\xe1\x77\xa6\xb8\x44\xb8\x6b\xfc\x41\xd5\x47\x9d\x61\x5d\x9c\x0f\x97\xb8\x84\x93\xb9\x9d\xa1\x94\x95\xc2\xee\x36\x7e\x99\xd7\x1f\x07\x16\xdb\x92\x89\xba\xd7\xee\x43\xa7\x52\x30\xb9\x1e\x87\xb4\x5a\xdb\x8e\xc5\x53\x7c\x3a\x00\xdb\x30\x9a\xcc\x67\x71\x98\x10\x3e\x56\x45\x6a\xaa\xa5\x3f\x23\x92\xe0\xd6\x0d\x33\x25\x50\x0b\xd2\x7e\x25\xd6\xfb\x6d\xcd\xe8\xdc\x52\x2e\x99\x58\x73\xd7\xdf\x06\xb7\x23\xb8\xcc\x2a\x69\x15\xb4\xa3\x2d\xb6\x2f\x8d\x9d\x12\x57\x9c\xdb\x4a\xd7\x05\x6e\xee\xbd\xed\xfd\x15\x00\x00\xff\xff\x51\xc1\x90\xae\x3a\x09\x00\x00")

func trigram_tracerJsBytes() ([]byte, error) {
	return bindataRead(
		_trigram_tracerJs,
		"trigram_tracer.js",
	)
}

func trigram_tracerJs() (*asset, error) {
	bytes, err := trigram_tracerJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "trigram_tracer.js", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x2c, 0x5b, 0xde, 0x68, 0x52, 0x75, 0x49, 0x71, 0x49, 0x3c, 0x15, 0x8f, 0x17, 0x11, 0xd2, 0x62, 0xcd, 0x94, 0x50, 0x49, 0xbc, 0x98, 0xf4, 0x25, 0x9e, 0xb7, 0xff, 0xdb, 0x7b, 0xff, 0x19, 0xa2}}
	return a, nil
}

var _unigram_tracerJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\xef\x6f\xda\x48\x10\xfd\xce\x5f\xf1\x94\x4f\xa0\x72\x18\x43\x13\x08\xbd\x56\xf2\x25\xa4\x45\x22\x3f\x04\xa6\x55\xee\x74\x3a\xad\xed\xb1\xbd\xd7\x65\xd7\xda\x5d\x43\x50\xc4\xff\x7e\x5a\x1b\x13\x52\xa5\xba\x7e\x41\x78\x77\xe6\xcd\x7b\x6f\x66\xc7\xf3\x70\xab\x12\x9e\xf2\x98\x59\xae\xa4\xc1\x95\x2a\x76\x9a\x67\xb9\xc5\xa0\x3f\xe8\x23\xcc\x09\xdf\x05\xdb\x59\x89\xa0\xb4\xb9\xd2\xa6\xe5\x79\xaf\x82\xfc\x71\x15\x94\xa9\xdf\xc8\xe6\xa4\xa9\x5c\x9f\x46\x86\x39\x37\x48\xb9\x20\x70\x83\x82\x69\x0b\x95\xc2\xfe\x10\x2f\x78\xa4\x99\xde\xf5\x5a\x9e\x57\xe7\xbc\x79\xed\x10\x52\x4d\x04\xa3\x52\xbb\x65\x9a\x26\xd8\xa9\x12\x31\x93\xd0\x94\x70\x63\x35\x8f\x4a\x4b\xe0\x16\x4c\x26\x9e\xd2\x58\x3b\x65\x3b\x07\xc9\x2d\x4a\x99\x90\xae\x4a\x5b\xd2\x6b\xd3\xf0\xf8\x7c\xb7\xc2\x9c\x8c\x21\x8d\xcf\x24\x49\x33\x81\x87\x32\x12\x3c\xc6\x9c\xc7\x24\x0d\x81\x19\x14\xee\xc4\xe4\x94\x20\xaa\xe0\x5c\xe2\x8d\xa3\xb2\x3c\x50\xc1\x8d\x2a\x65\x52\x59\xd8\x05\x71\xc7\x1c\x1b\xd2\x86\x2b\x89\x61\x53\xea\x00\xd8\x85\xd2\x0e\xa4\xcd\xac\x13\xa0\xa1\x0a\x97\xd7\x01\x93\x3b\x08\x66\x5f\x52\x7f\xc1\x90\x17\xdd\x09\xb8\xac\xca\xe4\xaa\x20\xd8\x9c\x59\xa7\x7a\xcb\x85\x40\x44\x28\x0d\xa5\xa5\xe8\x3a\xb4\xa8\xb4\xf8\x36\x0b\xbf\xdc\xaf\x42\x04\x77\x8f\xf8\x16\x2c\x16\xc1\x5d\xf8\xf8\x01\x5b\x6e\x73\x55\x5a\xd0\x86\x6a\x28\xbe\x2e\x04\xa7\x04\x5b\xa6\x35\x93\x76\x07\x95\x3a\x84\xdb\xe9\xe2\xea\x4b\x70\x17\x06\x7f\xcc\xe6\xb3\xf0\x11\x4a\xe3\x66\x16\xde\x4d\x97\x4b\xdc\xdc\x2f\x10\xe0\x21\x58\x84\xb3\xab\xd5\x3c\x58\xe0\x61\xb5\x78\xb8\x5f\x4e\x7b\x58\x92\x63\x45\x2e\xff\xff\x3d\x4f\xab\xee\x69\x42\x42\x96\x71\x61\x1a\x27\x1e\x55\x09\x93\xab\x52\x24\xc8\xd9\x86\xa0\x29\x26\xbe\xa1\x04\x0c\xb1\x2a\x76\xbf\xdc\x54\x87\xc5\x84\x92\x59\xa5\xf9\xa7\x03\x89\x59\x0a\xa9\x6c\x17\x86\x08\xbf\xe7\xd6\x16\x13\xcf\xdb\x6e\xb7\xbd\x4c\x96\x3d\xa5\x33\x4f\xd4\x70\xc6\xfb\xf4\xd2\xab\x93\x81\x4f\x48\x57\xec\x52\xad\xd6\x20\x9b\x7b\x56\xb3\x98\xb4\xf1\xb8\xb4\xa4\x25\x13\xc7\x83\x52\xf2\x4c\xb3\xf5\x3f\xf5\x77\xef\x5f\x83\xb6\x7b\x7f\x9e\xef\x7b\xfe\xb8\xd3\x6b\x1d\xdf\xa9\xd3\x2a\x13\xd7\x19\xad\x2a\x68\x55\x0f\xf5\xe1\x91\x26\xb4\x21\xa1\x8a\x35\x49\xdb\x30\x3a\x40\x87\x15\x32\x34\xd9\x52\x4b\x03\x55\xc4\x2a\x21\xc4\xaa\x94\x96\xcb\x0c\xb2\x5c\x47\x54\xcd\xe5\xf4\x89\xad\x0b\x41\x13\xf7\x1f\x9f\x90\x50\x54\x66\xbd\x8a\x57\xa8\x99\x34\x2c\x76\xd3\xda\xc6\x59\xff\x69\xe0\xbf\xa7\xf3\xcb\x11\x0d\xcf\x13\xd6\x1f\x0f\x2f\x2e\x07\xe9\xf9\x70\x7c\xe1\xbf\xf7\xe9\xe2\x32\x7d\x3f\xa2\xcb\xd1\x30\x1a\xc4\xe7\x17\x34\x62\xe3\xfe\x68\x18\xf9\xc4\xfa\xe3\x34\x19\x9d\x8f\x7c\xba\x4c\xe8\xac\x8b\xe7\x5a\xf0\x04\x67\xaf\x68\x9e\xed\x3b\xae\xfc\x73\xc5\x01\x40\x70\x7d\x3d\xc1\xa0\xdb\x7c\x5e\x05\xf3\xf9\x75\x10\x06\xf3\xfb\xe0\xcd\xf3\xe5\xec\xcf\xe9\x8f\xe7\x5f\x83\xf9\x6a\x3a\x81\x7f\x3c\xbc\x5e\x3d\xf8\x13\x8c\x4f\xbf\x07\x13\x0c\xab\xef\x7d\xeb\xb9\xe5\xce\x3c\x0f\x39\x37\xd6\xf5\xd2\x99\xbc\x66\x85\x1b\xb1\xda\x3b\x03\xab\x6a\xff\x48\x9b\x2a\xda\x85\x4e\xf0\xbc\xef\x36\xb9\x52\x15\xa6\x0e\x31\x07\x83\xeb\xf4\x3a\xdc\xdd\x4e\xd0\xaf\xa3\x0f\x19\xc6\x52\xe1\xaa\x71\xb9\x51\xdf\x0f\xed\xa5\x0d\xe9\x5d\xd3\xb0\xea\x61\x3b\x2e\x5f\x6f\x41\x4f\x14\x97\x96\x4c\xef\x88\xe0\xd2\x27\x48\x4b\x59\x37\x49\xa8\xac\x8b\x24\xea\xa0\x56\xb3\x61\x6e\xd9\xe0\x23\x84\xca\x7a\xaa\xe8\x59\xb5\xb4\x9a\xcb\xac\xdd\xf9\x50\xdd\xf3\x14\x6d\x9b\x73\xd3\x73\x42\xfe\x52\xc5\xdf\x9d\xe7\x23\xf2\xab\xf3\x77\xef\xea\x84\x7d\xf5\x4b\xc2\x10\x7e\x12\x89\x8f\xf0\x4f\x63\xab\x4b\x27\xdc\x41\xbc\x18\x95\xb2\x52\xd8\x53\xdd\xdb\xfc\xb0\x82\x58\x6c\x4b\x26\x0e\x52\xdd\x3a\x55\x29\x98\x6c\xdc\x48\xeb\xe5\xe0\x50\x2a\x88\x37\xb5\xef\xbb\xad\xa6\x8e\x26\xf3\x56\x21\x26\x44\x55\xac\x69\x6c\xb5\x5b\x22\x22\x09\x6e\x49\x33\xb7\x5c\xd5\x86\x74\xf5\xf2\x0e\x0f\xa8\x41\x74\x69\x29\x97\x4c\x34\xd8\x87\x15\xe4\xe6\x9a\xcb\xac\xe6\x56\x5f\x9d\x90\x8b\xed\x53\xe7\xc4\x32\x9e\xb6\x8f\xc6\xe0\x13\xfa\x27\xbe\xd7\xe9\xae\xe4\x8b\xb1\x1f\x8e\xb7\xb5\xa9\xfb\x6e\x6b\xdf\xfa\x2f\x00\x00\xff\xff\x73\xae\xcd\xa3\xca\x07\x00\x00")

func unigram_tracerJsBytes() ([]byte, error) {
	return bindataRead(
		_unigram_tracerJs,
		"unigram_tracer.js",
	)
}

func unigram_tracerJs() (*asset, error) {
	bytes, err := unigram_tracerJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "unigram_tracer.js", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x20, 0xee, 0x63, 0x31, 0xc0, 0xb, 0x42, 0x9b, 0x96, 0xf0, 0xb, 0xf0, 0x4a, 0xfb, 0x55, 0xaf, 0x2d, 0x9c, 0x9b, 0xa0, 0x57, 0x36, 0x68, 0x38, 0x5d, 0xe7, 0x2d, 0xba, 0xe3, 0x36, 0xe2, 0x9b}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"4byte_tracer.js":    _4byte_tracerJs,
	"bigram_tracer.js":   bigram_tracerJs,
	"call_tracer.js":     call_tracerJs,
	"evmdis_tracer.js":   evmdis_tracerJs,
	"noop_tracer.js":     noop_tracerJs,
	"opcount_tracer.js":  opcount_tracerJs,
	"prestate_tracer.js": prestate_tracerJs,
	"revert_tracer.js":   revert_tracerJs,
	"trigram_tracer.js":  trigram_tracerJs,
	"unigram_tracer.js":  unigram_tracerJs,
}

// AssetDebug is true if the assets were built with the debug flag enabled.
const AssetDebug = false

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"4byte_tracer.js":    {_4byte_tracerJs, map[string]*bintree{}},
	"bigram_tracer.js":   {bigram_tracerJs, map[string]*bintree{}},
	"call_tracer.js":     {call_tracerJs, map[string]*bintree{}},
	"evmdis_tracer.js":   {evmdis_tracerJs, map[string]*bintree{}},
	"noop_tracer.js":     {noop_tracerJs, map[string]*bintree{}},
	"opcount_tracer.js":  {opcount_tracerJs, map[string]*bintree{}},
	"prestate_tracer.js": {prestate_tracerJs, map[string]*bintree{}},
	"revert_tracer.js":   {revert_tracerJs, map[string]*bintree{}},
	"trigram_tracer.js":  {trigram_tracerJs, map[string]*bintree{}},
	"unigram_tracer.js":  {unigram_tracerJs, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
